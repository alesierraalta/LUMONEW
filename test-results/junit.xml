<testsuites id="" name="" tests="1764" failures="0" skipped="1764" errors="0" time="0.80931">
<testsuite name="workflows\auth-workflow.spec.ts" timestamp="2025-07-22T18:57:34.672Z" hostname="chromium" tests="33" failures="0" skipped="33" time="0" errors="0">
<testcase name="Authentication Workflows › User Login Flow › should login successfully with valid admin credentials" classname="workflows\auth-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Workflows › User Login Flow › should login successfully with valid user credentials" classname="workflows\auth-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Workflows › User Login Flow › should show error with invalid credentials" classname="workflows\auth-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Workflows › User Login Flow › should show validation errors for empty fields" classname="workflows\auth-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Workflows › User Login Flow › should redirect to dashboard after successful login" classname="workflows\auth-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Workflows › User Login Flow › should persist session after page refresh" classname="workflows\auth-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Workflows › User Login Flow › should handle multiple failed login attempts" classname="workflows\auth-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Workflows › User Registration Flow › should register new user successfully" classname="workflows\auth-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Workflows › User Registration Flow › should show error for duplicate email" classname="workflows\auth-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Workflows › User Registration Flow › should validate password strength" classname="workflows\auth-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Workflows › User Registration Flow › should validate email format" classname="workflows\auth-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Workflows › User Registration Flow › should require password confirmation match" classname="workflows\auth-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Workflows › User Registration Flow › should navigate between login and signup pages" classname="workflows\auth-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Workflows › Admin Signup Flow › should register admin with valid admin code" classname="workflows\auth-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Workflows › Admin Signup Flow › should reject invalid admin code" classname="workflows\auth-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Workflows › Admin Signup Flow › should navigate to admin signup from login page" classname="workflows\auth-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Workflows › Password Reset Flow › should send reset email for valid email" classname="workflows\auth-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Workflows › Password Reset Flow › should show error for non-existent email" classname="workflows\auth-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Workflows › Password Reset Flow › should navigate to reset password from login page" classname="workflows\auth-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Workflows › Password Reset Flow › should navigate back to login from reset password" classname="workflows\auth-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Workflows › Session Management and Logout › should logout successfully" classname="workflows\auth-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Workflows › Session Management and Logout › should clear session data on logout" classname="workflows\auth-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Workflows › Session Management and Logout › should handle session expiration" classname="workflows\auth-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Workflows › Session Management and Logout › should maintain session across browser tabs" classname="workflows\auth-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Workflows › Authentication Security › should prevent SQL injection in login form" classname="workflows\auth-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Workflows › Authentication Security › should prevent XSS in login form" classname="workflows\auth-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Workflows › Authentication Security › should enforce HTTPS in production" classname="workflows\auth-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Workflows › Authentication Security › should have secure password requirements" classname="workflows\auth-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Workflows › Authentication Accessibility › should be keyboard navigable" classname="workflows\auth-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Workflows › Authentication Accessibility › should have proper ARIA labels" classname="workflows\auth-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Workflows › Authentication Accessibility › should announce form errors to screen readers" classname="workflows\auth-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Workflows › Authentication Performance › should load login page quickly" classname="workflows\auth-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Workflows › Authentication Performance › should handle login request efficiently" classname="workflows\auth-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="workflows\categories-workflow.spec.ts" timestamp="2025-07-22T18:57:34.672Z" hostname="chromium" tests="33" failures="0" skipped="33" time="0" errors="0">
<testcase name="Categories Management Workflow › Categories List Page › should display categories list with proper elements" classname="workflows\categories-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Categories Management Workflow › Categories List Page › should load categories data successfully" classname="workflows\categories-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Categories Management Workflow › Categories List Page › should handle empty state when no categories exist" classname="workflows\categories-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Categories Management Workflow › Categories List Page › should handle loading state properly" classname="workflows\categories-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Categories Management Workflow › Categories List Page › should handle error state gracefully" classname="workflows\categories-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Categories Management Workflow › Categories Search and Filter › should search categories by name" classname="workflows\categories-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Categories Management Workflow › Categories Search and Filter › should search categories by description" classname="workflows\categories-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Categories Management Workflow › Categories Search and Filter › should clear search results" classname="workflows\categories-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Categories Management Workflow › Categories Search and Filter › should handle no search results" classname="workflows\categories-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Categories Management Workflow › Categories Sorting › should sort categories by name" classname="workflows\categories-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Categories Management Workflow › Categories Sorting › should sort categories by item count" classname="workflows\categories-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Categories Management Workflow › Categories Sorting › should sort categories by created date" classname="workflows\categories-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Categories Management Workflow › Categories Selection and Bulk Operations › should select individual categories" classname="workflows\categories-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Categories Management Workflow › Categories Selection and Bulk Operations › should select all categories" classname="workflows\categories-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Categories Management Workflow › Categories Selection and Bulk Operations › should deselect all categories" classname="workflows\categories-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Categories Management Workflow › Categories Selection and Bulk Operations › should show bulk actions panel when categories are selected" classname="workflows\categories-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Categories Management Workflow › Category Edit Workflow › should navigate to category edit page" classname="workflows\categories-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Categories Management Workflow › Category Edit Workflow › should load existing category data in edit form" classname="workflows\categories-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Categories Management Workflow › Category Edit Workflow › should update category successfully" classname="workflows\categories-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Categories Management Workflow › Category Edit Workflow › should validate required fields in edit form" classname="workflows\categories-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Categories Management Workflow › Category Edit Workflow › should cancel category edit" classname="workflows\categories-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Categories Management Workflow › Category Edit Workflow › should navigate back from edit page" classname="workflows\categories-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Categories Management Workflow › Category Delete Operations › should delete individual category" classname="workflows\categories-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Categories Management Workflow › Category Delete Operations › should handle delete confirmation dialog" classname="workflows\categories-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Categories Management Workflow › Accessibility and Performance › should meet accessibility standards" classname="workflows\categories-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Categories Management Workflow › Accessibility and Performance › should load categories page within performance budget" classname="workflows\categories-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Categories Management Workflow › Accessibility and Performance › should handle keyboard navigation" classname="workflows\categories-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Categories Management Workflow › Role-based Access Control › should allow admin full access to categories" classname="workflows\categories-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Categories Management Workflow › Role-based Access Control › should allow manager access to categories" classname="workflows\categories-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Categories Management Workflow › Role-based Access Control › should allow employee read access to categories" classname="workflows\categories-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Categories Management Workflow › Error Handling and Edge Cases › should handle network errors gracefully" classname="workflows\categories-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Categories Management Workflow › Error Handling and Edge Cases › should handle large datasets efficiently" classname="workflows\categories-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Categories Management Workflow › Error Handling and Edge Cases › should handle special characters in category names" classname="workflows\categories-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="workflows\dashboard-workflow.spec.ts" timestamp="2025-07-22T18:57:34.672Z" hostname="chromium" tests="39" failures="0" skipped="39" time="0" errors="0">
<testcase name="Dashboard Workflows › Dashboard Loading and Metrics Display › should load dashboard with all components" classname="workflows\dashboard-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Dashboard Workflows › Dashboard Loading and Metrics Display › should display correct metrics values" classname="workflows\dashboard-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Dashboard Workflows › Dashboard Loading and Metrics Display › should refresh dashboard data" classname="workflows\dashboard-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Dashboard Workflows › Dashboard Loading and Metrics Display › should handle dashboard with no data gracefully" classname="workflows\dashboard-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Dashboard Workflows › Dashboard Loading and Metrics Display › should display loading states during data fetch" classname="workflows\dashboard-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Dashboard Workflows › Quick Actions Functionality › should navigate to inventory creation from quick action" classname="workflows\dashboard-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Dashboard Workflows › Quick Actions Functionality › should open quick stock modal" classname="workflows\dashboard-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Dashboard Workflows › Quick Actions Functionality › should navigate to create transaction" classname="workflows\dashboard-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Dashboard Workflows › Quick Actions Functionality › should navigate to reports" classname="workflows\dashboard-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Dashboard Workflows › Quick Actions Functionality › should show tooltips on quick action hover" classname="workflows\dashboard-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Dashboard Workflows › Low Stock Alerts Interaction › should display low stock alerts" classname="workflows\dashboard-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Dashboard Workflows › Low Stock Alerts Interaction › should navigate to item details from low stock alert" classname="workflows\dashboard-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Dashboard Workflows › Low Stock Alerts Interaction › should show alert severity levels" classname="workflows\dashboard-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Dashboard Workflows › Low Stock Alerts Interaction › should dismiss individual alerts" classname="workflows\dashboard-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Dashboard Workflows › Charts and Analytics Interaction › should display inventory chart with data" classname="workflows\dashboard-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Dashboard Workflows › Charts and Analytics Interaction › should interact with chart elements" classname="workflows\dashboard-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Dashboard Workflows › Charts and Analytics Interaction › should switch between chart types" classname="workflows\dashboard-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Dashboard Workflows › Charts and Analytics Interaction › should filter chart data by date range" classname="workflows\dashboard-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Dashboard Workflows › Charts and Analytics Interaction › should export chart data" classname="workflows\dashboard-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Dashboard Workflows › Recent Activities Navigation › should display recent activities" classname="workflows\dashboard-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Dashboard Workflows › Recent Activities Navigation › should navigate to activity details" classname="workflows\dashboard-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Dashboard Workflows › Recent Activities Navigation › should show activity timestamps" classname="workflows\dashboard-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Dashboard Workflows › Recent Activities Navigation › should group activities by type" classname="workflows\dashboard-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Dashboard Workflows › Recent Activities Navigation › should load more activities" classname="workflows\dashboard-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Dashboard Workflows › Dashboard Responsiveness › should adapt to mobile viewport" classname="workflows\dashboard-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Dashboard Workflows › Dashboard Responsiveness › should maintain functionality on tablet" classname="workflows\dashboard-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Dashboard Workflows › Dashboard Responsiveness › should handle orientation changes" classname="workflows\dashboard-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Dashboard Workflows › Dashboard Accessibility › should be keyboard navigable" classname="workflows\dashboard-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Dashboard Workflows › Dashboard Accessibility › should have proper accessibility attributes" classname="workflows\dashboard-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Dashboard Workflows › Dashboard Accessibility › should support screen readers" classname="workflows\dashboard-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Dashboard Workflows › Dashboard Accessibility › should have sufficient color contrast" classname="workflows\dashboard-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Dashboard Workflows › Dashboard Performance › should load within acceptable time limits" classname="workflows\dashboard-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Dashboard Workflows › Dashboard Performance › should handle slow network conditions" classname="workflows\dashboard-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Dashboard Workflows › Dashboard Performance › should efficiently handle large datasets" classname="workflows\dashboard-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Dashboard Workflows › Dashboard Performance › should optimize chart rendering" classname="workflows\dashboard-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Dashboard Workflows › Dashboard Performance › should cache dashboard data appropriately" classname="workflows\dashboard-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Dashboard Workflows › Dashboard Error Handling › should handle API errors gracefully" classname="workflows\dashboard-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Dashboard Workflows › Dashboard Error Handling › should retry failed requests" classname="workflows\dashboard-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Dashboard Workflows › Dashboard Error Handling › should handle network disconnection" classname="workflows\dashboard-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="workflows\inventory-workflow.spec.ts" timestamp="2025-07-22T18:57:34.672Z" hostname="chromium" tests="35" failures="0" skipped="35" time="0" errors="0">
<testcase name="Inventory Management Workflows › Create New Inventory Item › should create new inventory item with all required fields" classname="workflows\inventory-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Inventory Management Workflows › Create New Inventory Item › should show validation errors for empty required fields" classname="workflows\inventory-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Inventory Management Workflows › Create New Inventory Item › should prevent duplicate SKU creation" classname="workflows\inventory-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Inventory Management Workflows › Create New Inventory Item › should validate numeric fields" classname="workflows\inventory-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Inventory Management Workflows › Create New Inventory Item › should upload and preview item image" classname="workflows\inventory-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Inventory Management Workflows › Create New Inventory Item › should auto-generate SKU if not provided" classname="workflows\inventory-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Inventory Management Workflows › Create New Inventory Item › should set default category and location if not selected" classname="workflows\inventory-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Inventory Management Workflows › Edit Existing Inventory Item › should edit inventory item successfully" classname="workflows\inventory-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Inventory Management Workflows › Edit Existing Inventory Item › should pre-fill form with existing data" classname="workflows\inventory-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Inventory Management Workflows › Edit Existing Inventory Item › should validate changes before saving" classname="workflows\inventory-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Inventory Management Workflows › Edit Existing Inventory Item › should track inventory changes in audit log" classname="workflows\inventory-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Inventory Management Workflows › Delete Inventory Item › should delete inventory item with confirmation" classname="workflows\inventory-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Inventory Management Workflows › Delete Inventory Item › should cancel deletion when user cancels" classname="workflows\inventory-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Inventory Management Workflows › Delete Inventory Item › should prevent deletion of items with active transactions" classname="workflows\inventory-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Inventory Management Workflows › Bulk Operations › should select multiple items for bulk operations" classname="workflows\inventory-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Inventory Management Workflows › Bulk Operations › should perform bulk price update" classname="workflows\inventory-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Inventory Management Workflows › Bulk Operations › should perform bulk category assignment" classname="workflows\inventory-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Inventory Management Workflows › Bulk Operations › should perform bulk deletion with confirmation" classname="workflows\inventory-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Inventory Management Workflows › Bulk Operations › should handle bulk operations on large datasets" classname="workflows\inventory-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Inventory Management Workflows › Quick Stock Operations › should perform quick stock adjustment" classname="workflows\inventory-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Inventory Management Workflows › Quick Stock Operations › should validate stock adjustment quantities" classname="workflows\inventory-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Inventory Management Workflows › Quick Stock Operations › should record stock adjustments in transaction history" classname="workflows\inventory-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Inventory Management Workflows › Search and Filter Inventory › should search inventory by name" classname="workflows\inventory-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Inventory Management Workflows › Search and Filter Inventory › should filter by category" classname="workflows\inventory-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Inventory Management Workflows › Search and Filter Inventory › should filter by location" classname="workflows\inventory-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Inventory Management Workflows › Search and Filter Inventory › should filter by stock level" classname="workflows\inventory-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Inventory Management Workflows › Search and Filter Inventory › should combine multiple filters" classname="workflows\inventory-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Inventory Management Workflows › Search and Filter Inventory › should clear all filters" classname="workflows\inventory-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Inventory Management Workflows › Search and Filter Inventory › should handle no search results gracefully" classname="workflows\inventory-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Inventory Management Workflows › Inventory Table Interactions › should sort inventory by different columns" classname="workflows\inventory-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Inventory Management Workflows › Inventory Table Interactions › should navigate through pagination" classname="workflows\inventory-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Inventory Management Workflows › Inventory Table Interactions › should display low stock warnings" classname="workflows\inventory-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Inventory Management Workflows › Inventory Table Interactions › should show item details on row click" classname="workflows\inventory-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Inventory Management Workflows › Inventory Performance › should load inventory page quickly" classname="workflows\inventory-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Inventory Management Workflows › Inventory Performance › should handle large inventory datasets efficiently" classname="workflows\inventory-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="workflows\locations-workflow.spec.ts" timestamp="2025-07-22T18:57:34.672Z" hostname="chromium" tests="38" failures="0" skipped="38" time="0" errors="0">
<testcase name="Locations Management Workflow › Locations List Page › should display locations list with proper elements" classname="workflows\locations-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Locations Management Workflow › Locations List Page › should load locations data successfully" classname="workflows\locations-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Locations Management Workflow › Locations List Page › should handle empty state when no locations exist" classname="workflows\locations-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Locations Management Workflow › Locations List Page › should handle loading state properly" classname="workflows\locations-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Locations Management Workflow › Locations List Page › should handle error state gracefully" classname="workflows\locations-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Locations Management Workflow › Locations Search and Filter › should search locations by name" classname="workflows\locations-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Locations Management Workflow › Locations Search and Filter › should search locations by address" classname="workflows\locations-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Locations Management Workflow › Locations Search and Filter › should clear search results" classname="workflows\locations-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Locations Management Workflow › Locations Search and Filter › should handle no search results" classname="workflows\locations-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Locations Management Workflow › Locations Sorting › should sort locations by name" classname="workflows\locations-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Locations Management Workflow › Locations Sorting › should sort locations by item quantity" classname="workflows\locations-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Locations Management Workflow › Locations Selection and Bulk Operations › should select individual locations" classname="workflows\locations-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Locations Management Workflow › Locations Selection and Bulk Operations › should select all locations" classname="workflows\locations-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Locations Management Workflow › Locations Selection and Bulk Operations › should deselect all locations" classname="workflows\locations-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Locations Management Workflow › Locations Selection and Bulk Operations › should show bulk actions panel when locations are selected" classname="workflows\locations-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Locations Management Workflow › Location Create Workflow › should navigate to location create page" classname="workflows\locations-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Locations Management Workflow › Location Create Workflow › should create new location successfully" classname="workflows\locations-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Locations Management Workflow › Location Create Workflow › should validate required fields in create form" classname="workflows\locations-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Locations Management Workflow › Location Create Workflow › should cancel location creation" classname="workflows\locations-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Locations Management Workflow › Location Create Workflow › should navigate back from create page" classname="workflows\locations-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Locations Management Workflow › Location Edit Workflow › should navigate to location edit page" classname="workflows\locations-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Locations Management Workflow › Location Edit Workflow › should load existing location data in edit form" classname="workflows\locations-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Locations Management Workflow › Location Edit Workflow › should update location successfully" classname="workflows\locations-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Locations Management Workflow › Location Edit Workflow › should validate required fields in edit form" classname="workflows\locations-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Locations Management Workflow › Location Edit Workflow › should cancel location edit" classname="workflows\locations-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Locations Management Workflow › Location Edit Workflow › should navigate back from edit page" classname="workflows\locations-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Locations Management Workflow › Location Delete Operations › should delete individual location" classname="workflows\locations-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Locations Management Workflow › Location Delete Operations › should handle delete confirmation dialog" classname="workflows\locations-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Locations Management Workflow › Accessibility and Performance › should meet accessibility standards" classname="workflows\locations-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Locations Management Workflow › Accessibility and Performance › should load locations page within performance budget" classname="workflows\locations-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Locations Management Workflow › Accessibility and Performance › should handle keyboard navigation" classname="workflows\locations-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Locations Management Workflow › Role-based Access Control › should allow admin full access to locations" classname="workflows\locations-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Locations Management Workflow › Role-based Access Control › should allow manager access to locations" classname="workflows\locations-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Locations Management Workflow › Role-based Access Control › should allow employee read access to locations" classname="workflows\locations-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Locations Management Workflow › Error Handling and Edge Cases › should handle network errors gracefully" classname="workflows\locations-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Locations Management Workflow › Error Handling and Edge Cases › should handle large datasets efficiently" classname="workflows\locations-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Locations Management Workflow › Error Handling and Edge Cases › should handle special characters in location names" classname="workflows\locations-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Locations Management Workflow › Error Handling and Edge Cases › should handle duplicate location names" classname="workflows\locations-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="workflows\transaction-workflow.spec.ts" timestamp="2025-07-22T18:57:34.672Z" hostname="chromium" tests="28" failures="0" skipped="28" time="0" errors="0">
<testcase name="Transaction Workflow Tests › Transaction Builder - Sales Transactions › should create a simple sale transaction" classname="workflows\transaction-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Transaction Workflow Tests › Transaction Builder - Sales Transactions › should create a multi-item sale transaction" classname="workflows\transaction-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Transaction Workflow Tests › Transaction Builder - Sales Transactions › should handle barcode scanning for sales" classname="workflows\transaction-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Transaction Workflow Tests › Transaction Builder - Sales Transactions › should allow removing line items" classname="workflows\transaction-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Transaction Workflow Tests › Transaction Builder - Sales Transactions › should validate minimum quantities" classname="workflows\transaction-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Transaction Workflow Tests › Transaction Builder - Sales Transactions › should handle transaction cancellation" classname="workflows\transaction-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Transaction Workflow Tests › Transaction Builder - Stock Addition Transactions › should create a stock addition transaction" classname="workflows\transaction-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Transaction Workflow Tests › Transaction Builder - Stock Addition Transactions › should handle large quantity stock additions" classname="workflows\transaction-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Transaction Workflow Tests › Transaction History › should display transaction history" classname="workflows\transaction-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Transaction Workflow Tests › Transaction History › should search transactions" classname="workflows\transaction-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Transaction Workflow Tests › Transaction History › should filter transactions by type" classname="workflows\transaction-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Transaction Workflow Tests › Transaction History › should filter transactions by status" classname="workflows\transaction-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Transaction Workflow Tests › Transaction History › should use advanced filters" classname="workflows\transaction-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Transaction Workflow Tests › Transaction History › should export transaction history" classname="workflows\transaction-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Transaction Workflow Tests › Transaction History › should handle pagination" classname="workflows\transaction-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Transaction Workflow Tests › Transaction History › should view transaction details" classname="workflows\transaction-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Transaction Workflow Tests › Transaction Workflow Integration › should create sale and verify in history" classname="workflows\transaction-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Transaction Workflow Tests › Transaction Workflow Integration › should create stock addition and verify in history" classname="workflows\transaction-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Transaction Workflow Tests › Transaction Workflow Integration › should handle transaction workflow with different user roles" classname="workflows\transaction-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Transaction Workflow Tests › Transaction Error Handling › should handle network errors gracefully" classname="workflows\transaction-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Transaction Workflow Tests › Transaction Error Handling › should validate required fields" classname="workflows\transaction-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Transaction Workflow Tests › Transaction Error Handling › should handle invalid product searches" classname="workflows\transaction-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Transaction Workflow Tests › Transaction Accessibility › should be keyboard navigable" classname="workflows\transaction-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Transaction Workflow Tests › Transaction Accessibility › should have proper ARIA labels" classname="workflows\transaction-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Transaction Workflow Tests › Transaction Accessibility › should support screen readers" classname="workflows\transaction-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Transaction Workflow Tests › Transaction Performance › should load transaction builder quickly" classname="workflows\transaction-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Transaction Workflow Tests › Transaction Performance › should handle large transaction history efficiently" classname="workflows\transaction-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Transaction Workflow Tests › Transaction Performance › should handle rapid product additions efficiently" classname="workflows\transaction-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="workflows\user-management-workflow.spec.ts" timestamp="2025-07-22T18:57:34.672Z" hostname="chromium" tests="46" failures="0" skipped="46" time="0" errors="0">
<testcase name="User Management Workflows › User Creation Workflow › should create a new user successfully" classname="workflows\user-management-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Management Workflows › User Creation Workflow › should validate required fields" classname="workflows\user-management-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Management Workflows › User Creation Workflow › should validate email format" classname="workflows\user-management-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Management Workflows › User Creation Workflow › should validate password requirements" classname="workflows\user-management-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Management Workflows › User Creation Workflow › should show role permissions when role is selected" classname="workflows\user-management-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Management Workflows › User Creation Workflow › should handle form cancellation" classname="workflows\user-management-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Management Workflows › User Creation Workflow › should disable form during submission" classname="workflows\user-management-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Management Workflows › User Listing and Filtering › should display users list" classname="workflows\user-management-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Management Workflows › User Listing and Filtering › should search users by name" classname="workflows\user-management-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Management Workflows › User Listing and Filtering › should search users by email" classname="workflows\user-management-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Management Workflows › User Listing and Filtering › should filter users by role" classname="workflows\user-management-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Management Workflows › User Listing and Filtering › should filter users by status" classname="workflows\user-management-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Management Workflows › User Listing and Filtering › should sort users by name" classname="workflows\user-management-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Management Workflows › User Listing and Filtering › should combine search and filters" classname="workflows\user-management-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Management Workflows › User Listing and Filtering › should handle empty search results" classname="workflows\user-management-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Management Workflows › User Listing and Filtering › should clear filters" classname="workflows\user-management-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Management Workflows › User Editing Workflow › should edit user details" classname="workflows\user-management-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Management Workflows › User Editing Workflow › should validate edit form" classname="workflows\user-management-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Management Workflows › User Editing Workflow › should cancel edit operation" classname="workflows\user-management-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Management Workflows › User Editing Workflow › should handle edit form loading state" classname="workflows\user-management-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Management Workflows › User Details and Viewing › should view user details" classname="workflows\user-management-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Management Workflows › User Details and Viewing › should close user details modal" classname="workflows\user-management-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Management Workflows › User Details and Viewing › should edit user from details modal" classname="workflows\user-management-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Management Workflows › User Details and Viewing › should display user avatar and status" classname="workflows\user-management-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Management Workflows › User Details and Viewing › should display contact and professional information" classname="workflows\user-management-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Management Workflows › User Deletion Workflow › should delete user successfully" classname="workflows\user-management-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Management Workflows › User Deletion Workflow › should confirm deletion before removing user" classname="workflows\user-management-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Management Workflows › User Deletion Workflow › should handle deletion errors gracefully" classname="workflows\user-management-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Management Workflows › Bulk User Operations › should select multiple users" classname="workflows\user-management-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Management Workflows › Bulk User Operations › should select all users" classname="workflows\user-management-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Management Workflows › Bulk User Operations › should perform bulk status update" classname="workflows\user-management-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Management Workflows › Bulk User Operations › should perform bulk role assignment" classname="workflows\user-management-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Management Workflows › Bulk User Operations › should perform bulk deletion" classname="workflows\user-management-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Management Workflows › Bulk User Operations › should handle bulk operation errors" classname="workflows\user-management-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Management Workflows › User Management Accessibility › should be keyboard navigable" classname="workflows\user-management-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Management Workflows › User Management Accessibility › should have proper ARIA labels" classname="workflows\user-management-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Management Workflows › User Management Accessibility › should support screen readers" classname="workflows\user-management-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Management Workflows › User Management Accessibility › should have sufficient color contrast" classname="workflows\user-management-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Management Workflows › User Management Performance › should load users list efficiently" classname="workflows\user-management-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Management Workflows › User Management Performance › should handle large user datasets" classname="workflows\user-management-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Management Workflows › User Management Performance › should implement efficient search" classname="workflows\user-management-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Management Workflows › User Management Performance › should implement pagination for large datasets" classname="workflows\user-management-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Management Workflows › User Management Error Handling › should handle API errors gracefully" classname="workflows\user-management-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Management Workflows › User Management Error Handling › should handle network disconnection" classname="workflows\user-management-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Management Workflows › User Management Error Handling › should retry failed requests" classname="workflows\user-management-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Management Workflows › User Management Error Handling › should handle validation errors from server" classname="workflows\user-management-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="workflows\auth-workflow.spec.ts" timestamp="2025-07-22T18:57:34.672Z" hostname="firefox" tests="33" failures="0" skipped="33" time="0" errors="0">
<testcase name="Authentication Workflows › User Login Flow › should login successfully with valid admin credentials" classname="workflows\auth-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Workflows › User Login Flow › should login successfully with valid user credentials" classname="workflows\auth-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Workflows › User Login Flow › should show error with invalid credentials" classname="workflows\auth-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Workflows › User Login Flow › should show validation errors for empty fields" classname="workflows\auth-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Workflows › User Login Flow › should redirect to dashboard after successful login" classname="workflows\auth-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Workflows › User Login Flow › should persist session after page refresh" classname="workflows\auth-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Workflows › User Login Flow › should handle multiple failed login attempts" classname="workflows\auth-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Workflows › User Registration Flow › should register new user successfully" classname="workflows\auth-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Workflows › User Registration Flow › should show error for duplicate email" classname="workflows\auth-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Workflows › User Registration Flow › should validate password strength" classname="workflows\auth-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Workflows › User Registration Flow › should validate email format" classname="workflows\auth-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Workflows › User Registration Flow › should require password confirmation match" classname="workflows\auth-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Workflows › User Registration Flow › should navigate between login and signup pages" classname="workflows\auth-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Workflows › Admin Signup Flow › should register admin with valid admin code" classname="workflows\auth-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Workflows › Admin Signup Flow › should reject invalid admin code" classname="workflows\auth-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Workflows › Admin Signup Flow › should navigate to admin signup from login page" classname="workflows\auth-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Workflows › Password Reset Flow › should send reset email for valid email" classname="workflows\auth-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Workflows › Password Reset Flow › should show error for non-existent email" classname="workflows\auth-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Workflows › Password Reset Flow › should navigate to reset password from login page" classname="workflows\auth-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Workflows › Password Reset Flow › should navigate back to login from reset password" classname="workflows\auth-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Workflows › Session Management and Logout › should logout successfully" classname="workflows\auth-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Workflows › Session Management and Logout › should clear session data on logout" classname="workflows\auth-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Workflows › Session Management and Logout › should handle session expiration" classname="workflows\auth-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Workflows › Session Management and Logout › should maintain session across browser tabs" classname="workflows\auth-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Workflows › Authentication Security › should prevent SQL injection in login form" classname="workflows\auth-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Workflows › Authentication Security › should prevent XSS in login form" classname="workflows\auth-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Workflows › Authentication Security › should enforce HTTPS in production" classname="workflows\auth-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Workflows › Authentication Security › should have secure password requirements" classname="workflows\auth-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Workflows › Authentication Accessibility › should be keyboard navigable" classname="workflows\auth-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Workflows › Authentication Accessibility › should have proper ARIA labels" classname="workflows\auth-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Workflows › Authentication Accessibility › should announce form errors to screen readers" classname="workflows\auth-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Workflows › Authentication Performance › should load login page quickly" classname="workflows\auth-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Workflows › Authentication Performance › should handle login request efficiently" classname="workflows\auth-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="workflows\categories-workflow.spec.ts" timestamp="2025-07-22T18:57:34.672Z" hostname="firefox" tests="33" failures="0" skipped="33" time="0" errors="0">
<testcase name="Categories Management Workflow › Categories List Page › should display categories list with proper elements" classname="workflows\categories-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Categories Management Workflow › Categories List Page › should load categories data successfully" classname="workflows\categories-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Categories Management Workflow › Categories List Page › should handle empty state when no categories exist" classname="workflows\categories-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Categories Management Workflow › Categories List Page › should handle loading state properly" classname="workflows\categories-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Categories Management Workflow › Categories List Page › should handle error state gracefully" classname="workflows\categories-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Categories Management Workflow › Categories Search and Filter › should search categories by name" classname="workflows\categories-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Categories Management Workflow › Categories Search and Filter › should search categories by description" classname="workflows\categories-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Categories Management Workflow › Categories Search and Filter › should clear search results" classname="workflows\categories-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Categories Management Workflow › Categories Search and Filter › should handle no search results" classname="workflows\categories-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Categories Management Workflow › Categories Sorting › should sort categories by name" classname="workflows\categories-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Categories Management Workflow › Categories Sorting › should sort categories by item count" classname="workflows\categories-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Categories Management Workflow › Categories Sorting › should sort categories by created date" classname="workflows\categories-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Categories Management Workflow › Categories Selection and Bulk Operations › should select individual categories" classname="workflows\categories-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Categories Management Workflow › Categories Selection and Bulk Operations › should select all categories" classname="workflows\categories-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Categories Management Workflow › Categories Selection and Bulk Operations › should deselect all categories" classname="workflows\categories-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Categories Management Workflow › Categories Selection and Bulk Operations › should show bulk actions panel when categories are selected" classname="workflows\categories-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Categories Management Workflow › Category Edit Workflow › should navigate to category edit page" classname="workflows\categories-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Categories Management Workflow › Category Edit Workflow › should load existing category data in edit form" classname="workflows\categories-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Categories Management Workflow › Category Edit Workflow › should update category successfully" classname="workflows\categories-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Categories Management Workflow › Category Edit Workflow › should validate required fields in edit form" classname="workflows\categories-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Categories Management Workflow › Category Edit Workflow › should cancel category edit" classname="workflows\categories-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Categories Management Workflow › Category Edit Workflow › should navigate back from edit page" classname="workflows\categories-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Categories Management Workflow › Category Delete Operations › should delete individual category" classname="workflows\categories-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Categories Management Workflow › Category Delete Operations › should handle delete confirmation dialog" classname="workflows\categories-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Categories Management Workflow › Accessibility and Performance › should meet accessibility standards" classname="workflows\categories-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Categories Management Workflow › Accessibility and Performance › should load categories page within performance budget" classname="workflows\categories-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Categories Management Workflow › Accessibility and Performance › should handle keyboard navigation" classname="workflows\categories-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Categories Management Workflow › Role-based Access Control › should allow admin full access to categories" classname="workflows\categories-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Categories Management Workflow › Role-based Access Control › should allow manager access to categories" classname="workflows\categories-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Categories Management Workflow › Role-based Access Control › should allow employee read access to categories" classname="workflows\categories-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Categories Management Workflow › Error Handling and Edge Cases › should handle network errors gracefully" classname="workflows\categories-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Categories Management Workflow › Error Handling and Edge Cases › should handle large datasets efficiently" classname="workflows\categories-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Categories Management Workflow › Error Handling and Edge Cases › should handle special characters in category names" classname="workflows\categories-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="workflows\dashboard-workflow.spec.ts" timestamp="2025-07-22T18:57:34.672Z" hostname="firefox" tests="39" failures="0" skipped="39" time="0" errors="0">
<testcase name="Dashboard Workflows › Dashboard Loading and Metrics Display › should load dashboard with all components" classname="workflows\dashboard-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Dashboard Workflows › Dashboard Loading and Metrics Display › should display correct metrics values" classname="workflows\dashboard-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Dashboard Workflows › Dashboard Loading and Metrics Display › should refresh dashboard data" classname="workflows\dashboard-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Dashboard Workflows › Dashboard Loading and Metrics Display › should handle dashboard with no data gracefully" classname="workflows\dashboard-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Dashboard Workflows › Dashboard Loading and Metrics Display › should display loading states during data fetch" classname="workflows\dashboard-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Dashboard Workflows › Quick Actions Functionality › should navigate to inventory creation from quick action" classname="workflows\dashboard-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Dashboard Workflows › Quick Actions Functionality › should open quick stock modal" classname="workflows\dashboard-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Dashboard Workflows › Quick Actions Functionality › should navigate to create transaction" classname="workflows\dashboard-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Dashboard Workflows › Quick Actions Functionality › should navigate to reports" classname="workflows\dashboard-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Dashboard Workflows › Quick Actions Functionality › should show tooltips on quick action hover" classname="workflows\dashboard-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Dashboard Workflows › Low Stock Alerts Interaction › should display low stock alerts" classname="workflows\dashboard-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Dashboard Workflows › Low Stock Alerts Interaction › should navigate to item details from low stock alert" classname="workflows\dashboard-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Dashboard Workflows › Low Stock Alerts Interaction › should show alert severity levels" classname="workflows\dashboard-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Dashboard Workflows › Low Stock Alerts Interaction › should dismiss individual alerts" classname="workflows\dashboard-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Dashboard Workflows › Charts and Analytics Interaction › should display inventory chart with data" classname="workflows\dashboard-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Dashboard Workflows › Charts and Analytics Interaction › should interact with chart elements" classname="workflows\dashboard-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Dashboard Workflows › Charts and Analytics Interaction › should switch between chart types" classname="workflows\dashboard-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Dashboard Workflows › Charts and Analytics Interaction › should filter chart data by date range" classname="workflows\dashboard-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Dashboard Workflows › Charts and Analytics Interaction › should export chart data" classname="workflows\dashboard-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Dashboard Workflows › Recent Activities Navigation › should display recent activities" classname="workflows\dashboard-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Dashboard Workflows › Recent Activities Navigation › should navigate to activity details" classname="workflows\dashboard-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Dashboard Workflows › Recent Activities Navigation › should show activity timestamps" classname="workflows\dashboard-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Dashboard Workflows › Recent Activities Navigation › should group activities by type" classname="workflows\dashboard-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Dashboard Workflows › Recent Activities Navigation › should load more activities" classname="workflows\dashboard-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Dashboard Workflows › Dashboard Responsiveness › should adapt to mobile viewport" classname="workflows\dashboard-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Dashboard Workflows › Dashboard Responsiveness › should maintain functionality on tablet" classname="workflows\dashboard-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Dashboard Workflows › Dashboard Responsiveness › should handle orientation changes" classname="workflows\dashboard-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Dashboard Workflows › Dashboard Accessibility › should be keyboard navigable" classname="workflows\dashboard-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Dashboard Workflows › Dashboard Accessibility › should have proper accessibility attributes" classname="workflows\dashboard-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Dashboard Workflows › Dashboard Accessibility › should support screen readers" classname="workflows\dashboard-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Dashboard Workflows › Dashboard Accessibility › should have sufficient color contrast" classname="workflows\dashboard-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Dashboard Workflows › Dashboard Performance › should load within acceptable time limits" classname="workflows\dashboard-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Dashboard Workflows › Dashboard Performance › should handle slow network conditions" classname="workflows\dashboard-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Dashboard Workflows › Dashboard Performance › should efficiently handle large datasets" classname="workflows\dashboard-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Dashboard Workflows › Dashboard Performance › should optimize chart rendering" classname="workflows\dashboard-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Dashboard Workflows › Dashboard Performance › should cache dashboard data appropriately" classname="workflows\dashboard-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Dashboard Workflows › Dashboard Error Handling › should handle API errors gracefully" classname="workflows\dashboard-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Dashboard Workflows › Dashboard Error Handling › should retry failed requests" classname="workflows\dashboard-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Dashboard Workflows › Dashboard Error Handling › should handle network disconnection" classname="workflows\dashboard-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="workflows\inventory-workflow.spec.ts" timestamp="2025-07-22T18:57:34.672Z" hostname="firefox" tests="35" failures="0" skipped="35" time="0" errors="0">
<testcase name="Inventory Management Workflows › Create New Inventory Item › should create new inventory item with all required fields" classname="workflows\inventory-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Inventory Management Workflows › Create New Inventory Item › should show validation errors for empty required fields" classname="workflows\inventory-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Inventory Management Workflows › Create New Inventory Item › should prevent duplicate SKU creation" classname="workflows\inventory-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Inventory Management Workflows › Create New Inventory Item › should validate numeric fields" classname="workflows\inventory-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Inventory Management Workflows › Create New Inventory Item › should upload and preview item image" classname="workflows\inventory-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Inventory Management Workflows › Create New Inventory Item › should auto-generate SKU if not provided" classname="workflows\inventory-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Inventory Management Workflows › Create New Inventory Item › should set default category and location if not selected" classname="workflows\inventory-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Inventory Management Workflows › Edit Existing Inventory Item › should edit inventory item successfully" classname="workflows\inventory-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Inventory Management Workflows › Edit Existing Inventory Item › should pre-fill form with existing data" classname="workflows\inventory-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Inventory Management Workflows › Edit Existing Inventory Item › should validate changes before saving" classname="workflows\inventory-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Inventory Management Workflows › Edit Existing Inventory Item › should track inventory changes in audit log" classname="workflows\inventory-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Inventory Management Workflows › Delete Inventory Item › should delete inventory item with confirmation" classname="workflows\inventory-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Inventory Management Workflows › Delete Inventory Item › should cancel deletion when user cancels" classname="workflows\inventory-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Inventory Management Workflows › Delete Inventory Item › should prevent deletion of items with active transactions" classname="workflows\inventory-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Inventory Management Workflows › Bulk Operations › should select multiple items for bulk operations" classname="workflows\inventory-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Inventory Management Workflows › Bulk Operations › should perform bulk price update" classname="workflows\inventory-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Inventory Management Workflows › Bulk Operations › should perform bulk category assignment" classname="workflows\inventory-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Inventory Management Workflows › Bulk Operations › should perform bulk deletion with confirmation" classname="workflows\inventory-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Inventory Management Workflows › Bulk Operations › should handle bulk operations on large datasets" classname="workflows\inventory-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Inventory Management Workflows › Quick Stock Operations › should perform quick stock adjustment" classname="workflows\inventory-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Inventory Management Workflows › Quick Stock Operations › should validate stock adjustment quantities" classname="workflows\inventory-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Inventory Management Workflows › Quick Stock Operations › should record stock adjustments in transaction history" classname="workflows\inventory-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Inventory Management Workflows › Search and Filter Inventory › should search inventory by name" classname="workflows\inventory-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Inventory Management Workflows › Search and Filter Inventory › should filter by category" classname="workflows\inventory-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Inventory Management Workflows › Search and Filter Inventory › should filter by location" classname="workflows\inventory-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Inventory Management Workflows › Search and Filter Inventory › should filter by stock level" classname="workflows\inventory-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Inventory Management Workflows › Search and Filter Inventory › should combine multiple filters" classname="workflows\inventory-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Inventory Management Workflows › Search and Filter Inventory › should clear all filters" classname="workflows\inventory-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Inventory Management Workflows › Search and Filter Inventory › should handle no search results gracefully" classname="workflows\inventory-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Inventory Management Workflows › Inventory Table Interactions › should sort inventory by different columns" classname="workflows\inventory-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Inventory Management Workflows › Inventory Table Interactions › should navigate through pagination" classname="workflows\inventory-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Inventory Management Workflows › Inventory Table Interactions › should display low stock warnings" classname="workflows\inventory-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Inventory Management Workflows › Inventory Table Interactions › should show item details on row click" classname="workflows\inventory-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Inventory Management Workflows › Inventory Performance › should load inventory page quickly" classname="workflows\inventory-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Inventory Management Workflows › Inventory Performance › should handle large inventory datasets efficiently" classname="workflows\inventory-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="workflows\locations-workflow.spec.ts" timestamp="2025-07-22T18:57:34.672Z" hostname="firefox" tests="38" failures="0" skipped="38" time="0" errors="0">
<testcase name="Locations Management Workflow › Locations List Page › should display locations list with proper elements" classname="workflows\locations-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Locations Management Workflow › Locations List Page › should load locations data successfully" classname="workflows\locations-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Locations Management Workflow › Locations List Page › should handle empty state when no locations exist" classname="workflows\locations-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Locations Management Workflow › Locations List Page › should handle loading state properly" classname="workflows\locations-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Locations Management Workflow › Locations List Page › should handle error state gracefully" classname="workflows\locations-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Locations Management Workflow › Locations Search and Filter › should search locations by name" classname="workflows\locations-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Locations Management Workflow › Locations Search and Filter › should search locations by address" classname="workflows\locations-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Locations Management Workflow › Locations Search and Filter › should clear search results" classname="workflows\locations-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Locations Management Workflow › Locations Search and Filter › should handle no search results" classname="workflows\locations-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Locations Management Workflow › Locations Sorting › should sort locations by name" classname="workflows\locations-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Locations Management Workflow › Locations Sorting › should sort locations by item quantity" classname="workflows\locations-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Locations Management Workflow › Locations Selection and Bulk Operations › should select individual locations" classname="workflows\locations-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Locations Management Workflow › Locations Selection and Bulk Operations › should select all locations" classname="workflows\locations-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Locations Management Workflow › Locations Selection and Bulk Operations › should deselect all locations" classname="workflows\locations-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Locations Management Workflow › Locations Selection and Bulk Operations › should show bulk actions panel when locations are selected" classname="workflows\locations-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Locations Management Workflow › Location Create Workflow › should navigate to location create page" classname="workflows\locations-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Locations Management Workflow › Location Create Workflow › should create new location successfully" classname="workflows\locations-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Locations Management Workflow › Location Create Workflow › should validate required fields in create form" classname="workflows\locations-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Locations Management Workflow › Location Create Workflow › should cancel location creation" classname="workflows\locations-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Locations Management Workflow › Location Create Workflow › should navigate back from create page" classname="workflows\locations-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Locations Management Workflow › Location Edit Workflow › should navigate to location edit page" classname="workflows\locations-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Locations Management Workflow › Location Edit Workflow › should load existing location data in edit form" classname="workflows\locations-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Locations Management Workflow › Location Edit Workflow › should update location successfully" classname="workflows\locations-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Locations Management Workflow › Location Edit Workflow › should validate required fields in edit form" classname="workflows\locations-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Locations Management Workflow › Location Edit Workflow › should cancel location edit" classname="workflows\locations-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Locations Management Workflow › Location Edit Workflow › should navigate back from edit page" classname="workflows\locations-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Locations Management Workflow › Location Delete Operations › should delete individual location" classname="workflows\locations-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Locations Management Workflow › Location Delete Operations › should handle delete confirmation dialog" classname="workflows\locations-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Locations Management Workflow › Accessibility and Performance › should meet accessibility standards" classname="workflows\locations-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Locations Management Workflow › Accessibility and Performance › should load locations page within performance budget" classname="workflows\locations-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Locations Management Workflow › Accessibility and Performance › should handle keyboard navigation" classname="workflows\locations-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Locations Management Workflow › Role-based Access Control › should allow admin full access to locations" classname="workflows\locations-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Locations Management Workflow › Role-based Access Control › should allow manager access to locations" classname="workflows\locations-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Locations Management Workflow › Role-based Access Control › should allow employee read access to locations" classname="workflows\locations-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Locations Management Workflow › Error Handling and Edge Cases › should handle network errors gracefully" classname="workflows\locations-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Locations Management Workflow › Error Handling and Edge Cases › should handle large datasets efficiently" classname="workflows\locations-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Locations Management Workflow › Error Handling and Edge Cases › should handle special characters in location names" classname="workflows\locations-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Locations Management Workflow › Error Handling and Edge Cases › should handle duplicate location names" classname="workflows\locations-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="workflows\transaction-workflow.spec.ts" timestamp="2025-07-22T18:57:34.672Z" hostname="firefox" tests="28" failures="0" skipped="28" time="0" errors="0">
<testcase name="Transaction Workflow Tests › Transaction Builder - Sales Transactions › should create a simple sale transaction" classname="workflows\transaction-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Transaction Workflow Tests › Transaction Builder - Sales Transactions › should create a multi-item sale transaction" classname="workflows\transaction-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Transaction Workflow Tests › Transaction Builder - Sales Transactions › should handle barcode scanning for sales" classname="workflows\transaction-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Transaction Workflow Tests › Transaction Builder - Sales Transactions › should allow removing line items" classname="workflows\transaction-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Transaction Workflow Tests › Transaction Builder - Sales Transactions › should validate minimum quantities" classname="workflows\transaction-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Transaction Workflow Tests › Transaction Builder - Sales Transactions › should handle transaction cancellation" classname="workflows\transaction-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Transaction Workflow Tests › Transaction Builder - Stock Addition Transactions › should create a stock addition transaction" classname="workflows\transaction-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Transaction Workflow Tests › Transaction Builder - Stock Addition Transactions › should handle large quantity stock additions" classname="workflows\transaction-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Transaction Workflow Tests › Transaction History › should display transaction history" classname="workflows\transaction-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Transaction Workflow Tests › Transaction History › should search transactions" classname="workflows\transaction-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Transaction Workflow Tests › Transaction History › should filter transactions by type" classname="workflows\transaction-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Transaction Workflow Tests › Transaction History › should filter transactions by status" classname="workflows\transaction-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Transaction Workflow Tests › Transaction History › should use advanced filters" classname="workflows\transaction-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Transaction Workflow Tests › Transaction History › should export transaction history" classname="workflows\transaction-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Transaction Workflow Tests › Transaction History › should handle pagination" classname="workflows\transaction-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Transaction Workflow Tests › Transaction History › should view transaction details" classname="workflows\transaction-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Transaction Workflow Tests › Transaction Workflow Integration › should create sale and verify in history" classname="workflows\transaction-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Transaction Workflow Tests › Transaction Workflow Integration › should create stock addition and verify in history" classname="workflows\transaction-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Transaction Workflow Tests › Transaction Workflow Integration › should handle transaction workflow with different user roles" classname="workflows\transaction-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Transaction Workflow Tests › Transaction Error Handling › should handle network errors gracefully" classname="workflows\transaction-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Transaction Workflow Tests › Transaction Error Handling › should validate required fields" classname="workflows\transaction-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Transaction Workflow Tests › Transaction Error Handling › should handle invalid product searches" classname="workflows\transaction-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Transaction Workflow Tests › Transaction Accessibility › should be keyboard navigable" classname="workflows\transaction-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Transaction Workflow Tests › Transaction Accessibility › should have proper ARIA labels" classname="workflows\transaction-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Transaction Workflow Tests › Transaction Accessibility › should support screen readers" classname="workflows\transaction-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Transaction Workflow Tests › Transaction Performance › should load transaction builder quickly" classname="workflows\transaction-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Transaction Workflow Tests › Transaction Performance › should handle large transaction history efficiently" classname="workflows\transaction-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Transaction Workflow Tests › Transaction Performance › should handle rapid product additions efficiently" classname="workflows\transaction-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="workflows\user-management-workflow.spec.ts" timestamp="2025-07-22T18:57:34.672Z" hostname="firefox" tests="46" failures="0" skipped="46" time="0" errors="0">
<testcase name="User Management Workflows › User Creation Workflow › should create a new user successfully" classname="workflows\user-management-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Management Workflows › User Creation Workflow › should validate required fields" classname="workflows\user-management-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Management Workflows › User Creation Workflow › should validate email format" classname="workflows\user-management-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Management Workflows › User Creation Workflow › should validate password requirements" classname="workflows\user-management-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Management Workflows › User Creation Workflow › should show role permissions when role is selected" classname="workflows\user-management-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Management Workflows › User Creation Workflow › should handle form cancellation" classname="workflows\user-management-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Management Workflows › User Creation Workflow › should disable form during submission" classname="workflows\user-management-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Management Workflows › User Listing and Filtering › should display users list" classname="workflows\user-management-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Management Workflows › User Listing and Filtering › should search users by name" classname="workflows\user-management-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Management Workflows › User Listing and Filtering › should search users by email" classname="workflows\user-management-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Management Workflows › User Listing and Filtering › should filter users by role" classname="workflows\user-management-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Management Workflows › User Listing and Filtering › should filter users by status" classname="workflows\user-management-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Management Workflows › User Listing and Filtering › should sort users by name" classname="workflows\user-management-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Management Workflows › User Listing and Filtering › should combine search and filters" classname="workflows\user-management-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Management Workflows › User Listing and Filtering › should handle empty search results" classname="workflows\user-management-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Management Workflows › User Listing and Filtering › should clear filters" classname="workflows\user-management-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Management Workflows › User Editing Workflow › should edit user details" classname="workflows\user-management-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Management Workflows › User Editing Workflow › should validate edit form" classname="workflows\user-management-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Management Workflows › User Editing Workflow › should cancel edit operation" classname="workflows\user-management-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Management Workflows › User Editing Workflow › should handle edit form loading state" classname="workflows\user-management-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Management Workflows › User Details and Viewing › should view user details" classname="workflows\user-management-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Management Workflows › User Details and Viewing › should close user details modal" classname="workflows\user-management-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Management Workflows › User Details and Viewing › should edit user from details modal" classname="workflows\user-management-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Management Workflows › User Details and Viewing › should display user avatar and status" classname="workflows\user-management-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Management Workflows › User Details and Viewing › should display contact and professional information" classname="workflows\user-management-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Management Workflows › User Deletion Workflow › should delete user successfully" classname="workflows\user-management-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Management Workflows › User Deletion Workflow › should confirm deletion before removing user" classname="workflows\user-management-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Management Workflows › User Deletion Workflow › should handle deletion errors gracefully" classname="workflows\user-management-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Management Workflows › Bulk User Operations › should select multiple users" classname="workflows\user-management-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Management Workflows › Bulk User Operations › should select all users" classname="workflows\user-management-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Management Workflows › Bulk User Operations › should perform bulk status update" classname="workflows\user-management-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Management Workflows › Bulk User Operations › should perform bulk role assignment" classname="workflows\user-management-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Management Workflows › Bulk User Operations › should perform bulk deletion" classname="workflows\user-management-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Management Workflows › Bulk User Operations › should handle bulk operation errors" classname="workflows\user-management-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Management Workflows › User Management Accessibility › should be keyboard navigable" classname="workflows\user-management-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Management Workflows › User Management Accessibility › should have proper ARIA labels" classname="workflows\user-management-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Management Workflows › User Management Accessibility › should support screen readers" classname="workflows\user-management-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Management Workflows › User Management Accessibility › should have sufficient color contrast" classname="workflows\user-management-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Management Workflows › User Management Performance › should load users list efficiently" classname="workflows\user-management-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Management Workflows › User Management Performance › should handle large user datasets" classname="workflows\user-management-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Management Workflows › User Management Performance › should implement efficient search" classname="workflows\user-management-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Management Workflows › User Management Performance › should implement pagination for large datasets" classname="workflows\user-management-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Management Workflows › User Management Error Handling › should handle API errors gracefully" classname="workflows\user-management-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Management Workflows › User Management Error Handling › should handle network disconnection" classname="workflows\user-management-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Management Workflows › User Management Error Handling › should retry failed requests" classname="workflows\user-management-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Management Workflows › User Management Error Handling › should handle validation errors from server" classname="workflows\user-management-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="workflows\auth-workflow.spec.ts" timestamp="2025-07-22T18:57:34.672Z" hostname="webkit" tests="33" failures="0" skipped="33" time="0" errors="0">
<testcase name="Authentication Workflows › User Login Flow › should login successfully with valid admin credentials" classname="workflows\auth-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Workflows › User Login Flow › should login successfully with valid user credentials" classname="workflows\auth-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Workflows › User Login Flow › should show error with invalid credentials" classname="workflows\auth-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Workflows › User Login Flow › should show validation errors for empty fields" classname="workflows\auth-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Workflows › User Login Flow › should redirect to dashboard after successful login" classname="workflows\auth-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Workflows › User Login Flow › should persist session after page refresh" classname="workflows\auth-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Workflows › User Login Flow › should handle multiple failed login attempts" classname="workflows\auth-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Workflows › User Registration Flow › should register new user successfully" classname="workflows\auth-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Workflows › User Registration Flow › should show error for duplicate email" classname="workflows\auth-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Workflows › User Registration Flow › should validate password strength" classname="workflows\auth-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Workflows › User Registration Flow › should validate email format" classname="workflows\auth-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Workflows › User Registration Flow › should require password confirmation match" classname="workflows\auth-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Workflows › User Registration Flow › should navigate between login and signup pages" classname="workflows\auth-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Workflows › Admin Signup Flow › should register admin with valid admin code" classname="workflows\auth-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Workflows › Admin Signup Flow › should reject invalid admin code" classname="workflows\auth-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Workflows › Admin Signup Flow › should navigate to admin signup from login page" classname="workflows\auth-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Workflows › Password Reset Flow › should send reset email for valid email" classname="workflows\auth-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Workflows › Password Reset Flow › should show error for non-existent email" classname="workflows\auth-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Workflows › Password Reset Flow › should navigate to reset password from login page" classname="workflows\auth-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Workflows › Password Reset Flow › should navigate back to login from reset password" classname="workflows\auth-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Workflows › Session Management and Logout › should logout successfully" classname="workflows\auth-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Workflows › Session Management and Logout › should clear session data on logout" classname="workflows\auth-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Workflows › Session Management and Logout › should handle session expiration" classname="workflows\auth-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Workflows › Session Management and Logout › should maintain session across browser tabs" classname="workflows\auth-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Workflows › Authentication Security › should prevent SQL injection in login form" classname="workflows\auth-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Workflows › Authentication Security › should prevent XSS in login form" classname="workflows\auth-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Workflows › Authentication Security › should enforce HTTPS in production" classname="workflows\auth-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Workflows › Authentication Security › should have secure password requirements" classname="workflows\auth-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Workflows › Authentication Accessibility › should be keyboard navigable" classname="workflows\auth-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Workflows › Authentication Accessibility › should have proper ARIA labels" classname="workflows\auth-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Workflows › Authentication Accessibility › should announce form errors to screen readers" classname="workflows\auth-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Workflows › Authentication Performance › should load login page quickly" classname="workflows\auth-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Workflows › Authentication Performance › should handle login request efficiently" classname="workflows\auth-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="workflows\categories-workflow.spec.ts" timestamp="2025-07-22T18:57:34.672Z" hostname="webkit" tests="33" failures="0" skipped="33" time="0" errors="0">
<testcase name="Categories Management Workflow › Categories List Page › should display categories list with proper elements" classname="workflows\categories-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Categories Management Workflow › Categories List Page › should load categories data successfully" classname="workflows\categories-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Categories Management Workflow › Categories List Page › should handle empty state when no categories exist" classname="workflows\categories-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Categories Management Workflow › Categories List Page › should handle loading state properly" classname="workflows\categories-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Categories Management Workflow › Categories List Page › should handle error state gracefully" classname="workflows\categories-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Categories Management Workflow › Categories Search and Filter › should search categories by name" classname="workflows\categories-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Categories Management Workflow › Categories Search and Filter › should search categories by description" classname="workflows\categories-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Categories Management Workflow › Categories Search and Filter › should clear search results" classname="workflows\categories-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Categories Management Workflow › Categories Search and Filter › should handle no search results" classname="workflows\categories-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Categories Management Workflow › Categories Sorting › should sort categories by name" classname="workflows\categories-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Categories Management Workflow › Categories Sorting › should sort categories by item count" classname="workflows\categories-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Categories Management Workflow › Categories Sorting › should sort categories by created date" classname="workflows\categories-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Categories Management Workflow › Categories Selection and Bulk Operations › should select individual categories" classname="workflows\categories-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Categories Management Workflow › Categories Selection and Bulk Operations › should select all categories" classname="workflows\categories-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Categories Management Workflow › Categories Selection and Bulk Operations › should deselect all categories" classname="workflows\categories-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Categories Management Workflow › Categories Selection and Bulk Operations › should show bulk actions panel when categories are selected" classname="workflows\categories-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Categories Management Workflow › Category Edit Workflow › should navigate to category edit page" classname="workflows\categories-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Categories Management Workflow › Category Edit Workflow › should load existing category data in edit form" classname="workflows\categories-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Categories Management Workflow › Category Edit Workflow › should update category successfully" classname="workflows\categories-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Categories Management Workflow › Category Edit Workflow › should validate required fields in edit form" classname="workflows\categories-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Categories Management Workflow › Category Edit Workflow › should cancel category edit" classname="workflows\categories-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Categories Management Workflow › Category Edit Workflow › should navigate back from edit page" classname="workflows\categories-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Categories Management Workflow › Category Delete Operations › should delete individual category" classname="workflows\categories-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Categories Management Workflow › Category Delete Operations › should handle delete confirmation dialog" classname="workflows\categories-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Categories Management Workflow › Accessibility and Performance › should meet accessibility standards" classname="workflows\categories-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Categories Management Workflow › Accessibility and Performance › should load categories page within performance budget" classname="workflows\categories-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Categories Management Workflow › Accessibility and Performance › should handle keyboard navigation" classname="workflows\categories-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Categories Management Workflow › Role-based Access Control › should allow admin full access to categories" classname="workflows\categories-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Categories Management Workflow › Role-based Access Control › should allow manager access to categories" classname="workflows\categories-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Categories Management Workflow › Role-based Access Control › should allow employee read access to categories" classname="workflows\categories-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Categories Management Workflow › Error Handling and Edge Cases › should handle network errors gracefully" classname="workflows\categories-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Categories Management Workflow › Error Handling and Edge Cases › should handle large datasets efficiently" classname="workflows\categories-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Categories Management Workflow › Error Handling and Edge Cases › should handle special characters in category names" classname="workflows\categories-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="workflows\dashboard-workflow.spec.ts" timestamp="2025-07-22T18:57:34.672Z" hostname="webkit" tests="39" failures="0" skipped="39" time="0" errors="0">
<testcase name="Dashboard Workflows › Dashboard Loading and Metrics Display › should load dashboard with all components" classname="workflows\dashboard-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Dashboard Workflows › Dashboard Loading and Metrics Display › should display correct metrics values" classname="workflows\dashboard-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Dashboard Workflows › Dashboard Loading and Metrics Display › should refresh dashboard data" classname="workflows\dashboard-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Dashboard Workflows › Dashboard Loading and Metrics Display › should handle dashboard with no data gracefully" classname="workflows\dashboard-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Dashboard Workflows › Dashboard Loading and Metrics Display › should display loading states during data fetch" classname="workflows\dashboard-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Dashboard Workflows › Quick Actions Functionality › should navigate to inventory creation from quick action" classname="workflows\dashboard-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Dashboard Workflows › Quick Actions Functionality › should open quick stock modal" classname="workflows\dashboard-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Dashboard Workflows › Quick Actions Functionality › should navigate to create transaction" classname="workflows\dashboard-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Dashboard Workflows › Quick Actions Functionality › should navigate to reports" classname="workflows\dashboard-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Dashboard Workflows › Quick Actions Functionality › should show tooltips on quick action hover" classname="workflows\dashboard-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Dashboard Workflows › Low Stock Alerts Interaction › should display low stock alerts" classname="workflows\dashboard-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Dashboard Workflows › Low Stock Alerts Interaction › should navigate to item details from low stock alert" classname="workflows\dashboard-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Dashboard Workflows › Low Stock Alerts Interaction › should show alert severity levels" classname="workflows\dashboard-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Dashboard Workflows › Low Stock Alerts Interaction › should dismiss individual alerts" classname="workflows\dashboard-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Dashboard Workflows › Charts and Analytics Interaction › should display inventory chart with data" classname="workflows\dashboard-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Dashboard Workflows › Charts and Analytics Interaction › should interact with chart elements" classname="workflows\dashboard-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Dashboard Workflows › Charts and Analytics Interaction › should switch between chart types" classname="workflows\dashboard-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Dashboard Workflows › Charts and Analytics Interaction › should filter chart data by date range" classname="workflows\dashboard-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Dashboard Workflows › Charts and Analytics Interaction › should export chart data" classname="workflows\dashboard-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Dashboard Workflows › Recent Activities Navigation › should display recent activities" classname="workflows\dashboard-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Dashboard Workflows › Recent Activities Navigation › should navigate to activity details" classname="workflows\dashboard-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Dashboard Workflows › Recent Activities Navigation › should show activity timestamps" classname="workflows\dashboard-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Dashboard Workflows › Recent Activities Navigation › should group activities by type" classname="workflows\dashboard-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Dashboard Workflows › Recent Activities Navigation › should load more activities" classname="workflows\dashboard-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Dashboard Workflows › Dashboard Responsiveness › should adapt to mobile viewport" classname="workflows\dashboard-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Dashboard Workflows › Dashboard Responsiveness › should maintain functionality on tablet" classname="workflows\dashboard-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Dashboard Workflows › Dashboard Responsiveness › should handle orientation changes" classname="workflows\dashboard-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Dashboard Workflows › Dashboard Accessibility › should be keyboard navigable" classname="workflows\dashboard-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Dashboard Workflows › Dashboard Accessibility › should have proper accessibility attributes" classname="workflows\dashboard-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Dashboard Workflows › Dashboard Accessibility › should support screen readers" classname="workflows\dashboard-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Dashboard Workflows › Dashboard Accessibility › should have sufficient color contrast" classname="workflows\dashboard-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Dashboard Workflows › Dashboard Performance › should load within acceptable time limits" classname="workflows\dashboard-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Dashboard Workflows › Dashboard Performance › should handle slow network conditions" classname="workflows\dashboard-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Dashboard Workflows › Dashboard Performance › should efficiently handle large datasets" classname="workflows\dashboard-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Dashboard Workflows › Dashboard Performance › should optimize chart rendering" classname="workflows\dashboard-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Dashboard Workflows › Dashboard Performance › should cache dashboard data appropriately" classname="workflows\dashboard-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Dashboard Workflows › Dashboard Error Handling › should handle API errors gracefully" classname="workflows\dashboard-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Dashboard Workflows › Dashboard Error Handling › should retry failed requests" classname="workflows\dashboard-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Dashboard Workflows › Dashboard Error Handling › should handle network disconnection" classname="workflows\dashboard-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="workflows\inventory-workflow.spec.ts" timestamp="2025-07-22T18:57:34.672Z" hostname="webkit" tests="35" failures="0" skipped="35" time="0" errors="0">
<testcase name="Inventory Management Workflows › Create New Inventory Item › should create new inventory item with all required fields" classname="workflows\inventory-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Inventory Management Workflows › Create New Inventory Item › should show validation errors for empty required fields" classname="workflows\inventory-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Inventory Management Workflows › Create New Inventory Item › should prevent duplicate SKU creation" classname="workflows\inventory-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Inventory Management Workflows › Create New Inventory Item › should validate numeric fields" classname="workflows\inventory-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Inventory Management Workflows › Create New Inventory Item › should upload and preview item image" classname="workflows\inventory-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Inventory Management Workflows › Create New Inventory Item › should auto-generate SKU if not provided" classname="workflows\inventory-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Inventory Management Workflows › Create New Inventory Item › should set default category and location if not selected" classname="workflows\inventory-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Inventory Management Workflows › Edit Existing Inventory Item › should edit inventory item successfully" classname="workflows\inventory-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Inventory Management Workflows › Edit Existing Inventory Item › should pre-fill form with existing data" classname="workflows\inventory-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Inventory Management Workflows › Edit Existing Inventory Item › should validate changes before saving" classname="workflows\inventory-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Inventory Management Workflows › Edit Existing Inventory Item › should track inventory changes in audit log" classname="workflows\inventory-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Inventory Management Workflows › Delete Inventory Item › should delete inventory item with confirmation" classname="workflows\inventory-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Inventory Management Workflows › Delete Inventory Item › should cancel deletion when user cancels" classname="workflows\inventory-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Inventory Management Workflows › Delete Inventory Item › should prevent deletion of items with active transactions" classname="workflows\inventory-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Inventory Management Workflows › Bulk Operations › should select multiple items for bulk operations" classname="workflows\inventory-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Inventory Management Workflows › Bulk Operations › should perform bulk price update" classname="workflows\inventory-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Inventory Management Workflows › Bulk Operations › should perform bulk category assignment" classname="workflows\inventory-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Inventory Management Workflows › Bulk Operations › should perform bulk deletion with confirmation" classname="workflows\inventory-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Inventory Management Workflows › Bulk Operations › should handle bulk operations on large datasets" classname="workflows\inventory-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Inventory Management Workflows › Quick Stock Operations › should perform quick stock adjustment" classname="workflows\inventory-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Inventory Management Workflows › Quick Stock Operations › should validate stock adjustment quantities" classname="workflows\inventory-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Inventory Management Workflows › Quick Stock Operations › should record stock adjustments in transaction history" classname="workflows\inventory-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Inventory Management Workflows › Search and Filter Inventory › should search inventory by name" classname="workflows\inventory-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Inventory Management Workflows › Search and Filter Inventory › should filter by category" classname="workflows\inventory-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Inventory Management Workflows › Search and Filter Inventory › should filter by location" classname="workflows\inventory-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Inventory Management Workflows › Search and Filter Inventory › should filter by stock level" classname="workflows\inventory-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Inventory Management Workflows › Search and Filter Inventory › should combine multiple filters" classname="workflows\inventory-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Inventory Management Workflows › Search and Filter Inventory › should clear all filters" classname="workflows\inventory-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Inventory Management Workflows › Search and Filter Inventory › should handle no search results gracefully" classname="workflows\inventory-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Inventory Management Workflows › Inventory Table Interactions › should sort inventory by different columns" classname="workflows\inventory-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Inventory Management Workflows › Inventory Table Interactions › should navigate through pagination" classname="workflows\inventory-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Inventory Management Workflows › Inventory Table Interactions › should display low stock warnings" classname="workflows\inventory-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Inventory Management Workflows › Inventory Table Interactions › should show item details on row click" classname="workflows\inventory-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Inventory Management Workflows › Inventory Performance › should load inventory page quickly" classname="workflows\inventory-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Inventory Management Workflows › Inventory Performance › should handle large inventory datasets efficiently" classname="workflows\inventory-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="workflows\locations-workflow.spec.ts" timestamp="2025-07-22T18:57:34.672Z" hostname="webkit" tests="38" failures="0" skipped="38" time="0" errors="0">
<testcase name="Locations Management Workflow › Locations List Page › should display locations list with proper elements" classname="workflows\locations-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Locations Management Workflow › Locations List Page › should load locations data successfully" classname="workflows\locations-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Locations Management Workflow › Locations List Page › should handle empty state when no locations exist" classname="workflows\locations-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Locations Management Workflow › Locations List Page › should handle loading state properly" classname="workflows\locations-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Locations Management Workflow › Locations List Page › should handle error state gracefully" classname="workflows\locations-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Locations Management Workflow › Locations Search and Filter › should search locations by name" classname="workflows\locations-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Locations Management Workflow › Locations Search and Filter › should search locations by address" classname="workflows\locations-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Locations Management Workflow › Locations Search and Filter › should clear search results" classname="workflows\locations-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Locations Management Workflow › Locations Search and Filter › should handle no search results" classname="workflows\locations-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Locations Management Workflow › Locations Sorting › should sort locations by name" classname="workflows\locations-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Locations Management Workflow › Locations Sorting › should sort locations by item quantity" classname="workflows\locations-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Locations Management Workflow › Locations Selection and Bulk Operations › should select individual locations" classname="workflows\locations-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Locations Management Workflow › Locations Selection and Bulk Operations › should select all locations" classname="workflows\locations-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Locations Management Workflow › Locations Selection and Bulk Operations › should deselect all locations" classname="workflows\locations-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Locations Management Workflow › Locations Selection and Bulk Operations › should show bulk actions panel when locations are selected" classname="workflows\locations-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Locations Management Workflow › Location Create Workflow › should navigate to location create page" classname="workflows\locations-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Locations Management Workflow › Location Create Workflow › should create new location successfully" classname="workflows\locations-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Locations Management Workflow › Location Create Workflow › should validate required fields in create form" classname="workflows\locations-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Locations Management Workflow › Location Create Workflow › should cancel location creation" classname="workflows\locations-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Locations Management Workflow › Location Create Workflow › should navigate back from create page" classname="workflows\locations-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Locations Management Workflow › Location Edit Workflow › should navigate to location edit page" classname="workflows\locations-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Locations Management Workflow › Location Edit Workflow › should load existing location data in edit form" classname="workflows\locations-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Locations Management Workflow › Location Edit Workflow › should update location successfully" classname="workflows\locations-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Locations Management Workflow › Location Edit Workflow › should validate required fields in edit form" classname="workflows\locations-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Locations Management Workflow › Location Edit Workflow › should cancel location edit" classname="workflows\locations-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Locations Management Workflow › Location Edit Workflow › should navigate back from edit page" classname="workflows\locations-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Locations Management Workflow › Location Delete Operations › should delete individual location" classname="workflows\locations-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Locations Management Workflow › Location Delete Operations › should handle delete confirmation dialog" classname="workflows\locations-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Locations Management Workflow › Accessibility and Performance › should meet accessibility standards" classname="workflows\locations-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Locations Management Workflow › Accessibility and Performance › should load locations page within performance budget" classname="workflows\locations-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Locations Management Workflow › Accessibility and Performance › should handle keyboard navigation" classname="workflows\locations-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Locations Management Workflow › Role-based Access Control › should allow admin full access to locations" classname="workflows\locations-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Locations Management Workflow › Role-based Access Control › should allow manager access to locations" classname="workflows\locations-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Locations Management Workflow › Role-based Access Control › should allow employee read access to locations" classname="workflows\locations-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Locations Management Workflow › Error Handling and Edge Cases › should handle network errors gracefully" classname="workflows\locations-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Locations Management Workflow › Error Handling and Edge Cases › should handle large datasets efficiently" classname="workflows\locations-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Locations Management Workflow › Error Handling and Edge Cases › should handle special characters in location names" classname="workflows\locations-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Locations Management Workflow › Error Handling and Edge Cases › should handle duplicate location names" classname="workflows\locations-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="workflows\transaction-workflow.spec.ts" timestamp="2025-07-22T18:57:34.672Z" hostname="webkit" tests="28" failures="0" skipped="28" time="0" errors="0">
<testcase name="Transaction Workflow Tests › Transaction Builder - Sales Transactions › should create a simple sale transaction" classname="workflows\transaction-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Transaction Workflow Tests › Transaction Builder - Sales Transactions › should create a multi-item sale transaction" classname="workflows\transaction-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Transaction Workflow Tests › Transaction Builder - Sales Transactions › should handle barcode scanning for sales" classname="workflows\transaction-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Transaction Workflow Tests › Transaction Builder - Sales Transactions › should allow removing line items" classname="workflows\transaction-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Transaction Workflow Tests › Transaction Builder - Sales Transactions › should validate minimum quantities" classname="workflows\transaction-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Transaction Workflow Tests › Transaction Builder - Sales Transactions › should handle transaction cancellation" classname="workflows\transaction-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Transaction Workflow Tests › Transaction Builder - Stock Addition Transactions › should create a stock addition transaction" classname="workflows\transaction-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Transaction Workflow Tests › Transaction Builder - Stock Addition Transactions › should handle large quantity stock additions" classname="workflows\transaction-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Transaction Workflow Tests › Transaction History › should display transaction history" classname="workflows\transaction-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Transaction Workflow Tests › Transaction History › should search transactions" classname="workflows\transaction-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Transaction Workflow Tests › Transaction History › should filter transactions by type" classname="workflows\transaction-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Transaction Workflow Tests › Transaction History › should filter transactions by status" classname="workflows\transaction-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Transaction Workflow Tests › Transaction History › should use advanced filters" classname="workflows\transaction-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Transaction Workflow Tests › Transaction History › should export transaction history" classname="workflows\transaction-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Transaction Workflow Tests › Transaction History › should handle pagination" classname="workflows\transaction-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Transaction Workflow Tests › Transaction History › should view transaction details" classname="workflows\transaction-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Transaction Workflow Tests › Transaction Workflow Integration › should create sale and verify in history" classname="workflows\transaction-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Transaction Workflow Tests › Transaction Workflow Integration › should create stock addition and verify in history" classname="workflows\transaction-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Transaction Workflow Tests › Transaction Workflow Integration › should handle transaction workflow with different user roles" classname="workflows\transaction-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Transaction Workflow Tests › Transaction Error Handling › should handle network errors gracefully" classname="workflows\transaction-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Transaction Workflow Tests › Transaction Error Handling › should validate required fields" classname="workflows\transaction-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Transaction Workflow Tests › Transaction Error Handling › should handle invalid product searches" classname="workflows\transaction-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Transaction Workflow Tests › Transaction Accessibility › should be keyboard navigable" classname="workflows\transaction-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Transaction Workflow Tests › Transaction Accessibility › should have proper ARIA labels" classname="workflows\transaction-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Transaction Workflow Tests › Transaction Accessibility › should support screen readers" classname="workflows\transaction-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Transaction Workflow Tests › Transaction Performance › should load transaction builder quickly" classname="workflows\transaction-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Transaction Workflow Tests › Transaction Performance › should handle large transaction history efficiently" classname="workflows\transaction-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Transaction Workflow Tests › Transaction Performance › should handle rapid product additions efficiently" classname="workflows\transaction-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="workflows\user-management-workflow.spec.ts" timestamp="2025-07-22T18:57:34.672Z" hostname="webkit" tests="46" failures="0" skipped="46" time="0" errors="0">
<testcase name="User Management Workflows › User Creation Workflow › should create a new user successfully" classname="workflows\user-management-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Management Workflows › User Creation Workflow › should validate required fields" classname="workflows\user-management-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Management Workflows › User Creation Workflow › should validate email format" classname="workflows\user-management-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Management Workflows › User Creation Workflow › should validate password requirements" classname="workflows\user-management-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Management Workflows › User Creation Workflow › should show role permissions when role is selected" classname="workflows\user-management-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Management Workflows › User Creation Workflow › should handle form cancellation" classname="workflows\user-management-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Management Workflows › User Creation Workflow › should disable form during submission" classname="workflows\user-management-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Management Workflows › User Listing and Filtering › should display users list" classname="workflows\user-management-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Management Workflows › User Listing and Filtering › should search users by name" classname="workflows\user-management-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Management Workflows › User Listing and Filtering › should search users by email" classname="workflows\user-management-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Management Workflows › User Listing and Filtering › should filter users by role" classname="workflows\user-management-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Management Workflows › User Listing and Filtering › should filter users by status" classname="workflows\user-management-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Management Workflows › User Listing and Filtering › should sort users by name" classname="workflows\user-management-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Management Workflows › User Listing and Filtering › should combine search and filters" classname="workflows\user-management-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Management Workflows › User Listing and Filtering › should handle empty search results" classname="workflows\user-management-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Management Workflows › User Listing and Filtering › should clear filters" classname="workflows\user-management-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Management Workflows › User Editing Workflow › should edit user details" classname="workflows\user-management-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Management Workflows › User Editing Workflow › should validate edit form" classname="workflows\user-management-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Management Workflows › User Editing Workflow › should cancel edit operation" classname="workflows\user-management-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Management Workflows › User Editing Workflow › should handle edit form loading state" classname="workflows\user-management-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Management Workflows › User Details and Viewing › should view user details" classname="workflows\user-management-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Management Workflows › User Details and Viewing › should close user details modal" classname="workflows\user-management-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Management Workflows › User Details and Viewing › should edit user from details modal" classname="workflows\user-management-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Management Workflows › User Details and Viewing › should display user avatar and status" classname="workflows\user-management-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Management Workflows › User Details and Viewing › should display contact and professional information" classname="workflows\user-management-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Management Workflows › User Deletion Workflow › should delete user successfully" classname="workflows\user-management-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Management Workflows › User Deletion Workflow › should confirm deletion before removing user" classname="workflows\user-management-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Management Workflows › User Deletion Workflow › should handle deletion errors gracefully" classname="workflows\user-management-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Management Workflows › Bulk User Operations › should select multiple users" classname="workflows\user-management-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Management Workflows › Bulk User Operations › should select all users" classname="workflows\user-management-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Management Workflows › Bulk User Operations › should perform bulk status update" classname="workflows\user-management-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Management Workflows › Bulk User Operations › should perform bulk role assignment" classname="workflows\user-management-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Management Workflows › Bulk User Operations › should perform bulk deletion" classname="workflows\user-management-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Management Workflows › Bulk User Operations › should handle bulk operation errors" classname="workflows\user-management-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Management Workflows › User Management Accessibility › should be keyboard navigable" classname="workflows\user-management-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Management Workflows › User Management Accessibility › should have proper ARIA labels" classname="workflows\user-management-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Management Workflows › User Management Accessibility › should support screen readers" classname="workflows\user-management-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Management Workflows › User Management Accessibility › should have sufficient color contrast" classname="workflows\user-management-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Management Workflows › User Management Performance › should load users list efficiently" classname="workflows\user-management-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Management Workflows › User Management Performance › should handle large user datasets" classname="workflows\user-management-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Management Workflows › User Management Performance › should implement efficient search" classname="workflows\user-management-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Management Workflows › User Management Performance › should implement pagination for large datasets" classname="workflows\user-management-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Management Workflows › User Management Error Handling › should handle API errors gracefully" classname="workflows\user-management-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Management Workflows › User Management Error Handling › should handle network disconnection" classname="workflows\user-management-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Management Workflows › User Management Error Handling › should retry failed requests" classname="workflows\user-management-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Management Workflows › User Management Error Handling › should handle validation errors from server" classname="workflows\user-management-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="workflows\auth-workflow.spec.ts" timestamp="2025-07-22T18:57:34.672Z" hostname="Mobile Chrome" tests="33" failures="0" skipped="33" time="0" errors="0">
<testcase name="Authentication Workflows › User Login Flow › should login successfully with valid admin credentials" classname="workflows\auth-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Workflows › User Login Flow › should login successfully with valid user credentials" classname="workflows\auth-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Workflows › User Login Flow › should show error with invalid credentials" classname="workflows\auth-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Workflows › User Login Flow › should show validation errors for empty fields" classname="workflows\auth-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Workflows › User Login Flow › should redirect to dashboard after successful login" classname="workflows\auth-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Workflows › User Login Flow › should persist session after page refresh" classname="workflows\auth-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Workflows › User Login Flow › should handle multiple failed login attempts" classname="workflows\auth-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Workflows › User Registration Flow › should register new user successfully" classname="workflows\auth-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Workflows › User Registration Flow › should show error for duplicate email" classname="workflows\auth-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Workflows › User Registration Flow › should validate password strength" classname="workflows\auth-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Workflows › User Registration Flow › should validate email format" classname="workflows\auth-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Workflows › User Registration Flow › should require password confirmation match" classname="workflows\auth-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Workflows › User Registration Flow › should navigate between login and signup pages" classname="workflows\auth-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Workflows › Admin Signup Flow › should register admin with valid admin code" classname="workflows\auth-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Workflows › Admin Signup Flow › should reject invalid admin code" classname="workflows\auth-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Workflows › Admin Signup Flow › should navigate to admin signup from login page" classname="workflows\auth-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Workflows › Password Reset Flow › should send reset email for valid email" classname="workflows\auth-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Workflows › Password Reset Flow › should show error for non-existent email" classname="workflows\auth-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Workflows › Password Reset Flow › should navigate to reset password from login page" classname="workflows\auth-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Workflows › Password Reset Flow › should navigate back to login from reset password" classname="workflows\auth-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Workflows › Session Management and Logout › should logout successfully" classname="workflows\auth-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Workflows › Session Management and Logout › should clear session data on logout" classname="workflows\auth-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Workflows › Session Management and Logout › should handle session expiration" classname="workflows\auth-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Workflows › Session Management and Logout › should maintain session across browser tabs" classname="workflows\auth-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Workflows › Authentication Security › should prevent SQL injection in login form" classname="workflows\auth-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Workflows › Authentication Security › should prevent XSS in login form" classname="workflows\auth-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Workflows › Authentication Security › should enforce HTTPS in production" classname="workflows\auth-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Workflows › Authentication Security › should have secure password requirements" classname="workflows\auth-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Workflows › Authentication Accessibility › should be keyboard navigable" classname="workflows\auth-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Workflows › Authentication Accessibility › should have proper ARIA labels" classname="workflows\auth-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Workflows › Authentication Accessibility › should announce form errors to screen readers" classname="workflows\auth-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Workflows › Authentication Performance › should load login page quickly" classname="workflows\auth-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Workflows › Authentication Performance › should handle login request efficiently" classname="workflows\auth-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="workflows\categories-workflow.spec.ts" timestamp="2025-07-22T18:57:34.672Z" hostname="Mobile Chrome" tests="33" failures="0" skipped="33" time="0" errors="0">
<testcase name="Categories Management Workflow › Categories List Page › should display categories list with proper elements" classname="workflows\categories-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Categories Management Workflow › Categories List Page › should load categories data successfully" classname="workflows\categories-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Categories Management Workflow › Categories List Page › should handle empty state when no categories exist" classname="workflows\categories-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Categories Management Workflow › Categories List Page › should handle loading state properly" classname="workflows\categories-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Categories Management Workflow › Categories List Page › should handle error state gracefully" classname="workflows\categories-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Categories Management Workflow › Categories Search and Filter › should search categories by name" classname="workflows\categories-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Categories Management Workflow › Categories Search and Filter › should search categories by description" classname="workflows\categories-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Categories Management Workflow › Categories Search and Filter › should clear search results" classname="workflows\categories-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Categories Management Workflow › Categories Search and Filter › should handle no search results" classname="workflows\categories-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Categories Management Workflow › Categories Sorting › should sort categories by name" classname="workflows\categories-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Categories Management Workflow › Categories Sorting › should sort categories by item count" classname="workflows\categories-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Categories Management Workflow › Categories Sorting › should sort categories by created date" classname="workflows\categories-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Categories Management Workflow › Categories Selection and Bulk Operations › should select individual categories" classname="workflows\categories-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Categories Management Workflow › Categories Selection and Bulk Operations › should select all categories" classname="workflows\categories-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Categories Management Workflow › Categories Selection and Bulk Operations › should deselect all categories" classname="workflows\categories-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Categories Management Workflow › Categories Selection and Bulk Operations › should show bulk actions panel when categories are selected" classname="workflows\categories-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Categories Management Workflow › Category Edit Workflow › should navigate to category edit page" classname="workflows\categories-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Categories Management Workflow › Category Edit Workflow › should load existing category data in edit form" classname="workflows\categories-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Categories Management Workflow › Category Edit Workflow › should update category successfully" classname="workflows\categories-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Categories Management Workflow › Category Edit Workflow › should validate required fields in edit form" classname="workflows\categories-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Categories Management Workflow › Category Edit Workflow › should cancel category edit" classname="workflows\categories-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Categories Management Workflow › Category Edit Workflow › should navigate back from edit page" classname="workflows\categories-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Categories Management Workflow › Category Delete Operations › should delete individual category" classname="workflows\categories-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Categories Management Workflow › Category Delete Operations › should handle delete confirmation dialog" classname="workflows\categories-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Categories Management Workflow › Accessibility and Performance › should meet accessibility standards" classname="workflows\categories-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Categories Management Workflow › Accessibility and Performance › should load categories page within performance budget" classname="workflows\categories-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Categories Management Workflow › Accessibility and Performance › should handle keyboard navigation" classname="workflows\categories-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Categories Management Workflow › Role-based Access Control › should allow admin full access to categories" classname="workflows\categories-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Categories Management Workflow › Role-based Access Control › should allow manager access to categories" classname="workflows\categories-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Categories Management Workflow › Role-based Access Control › should allow employee read access to categories" classname="workflows\categories-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Categories Management Workflow › Error Handling and Edge Cases › should handle network errors gracefully" classname="workflows\categories-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Categories Management Workflow › Error Handling and Edge Cases › should handle large datasets efficiently" classname="workflows\categories-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Categories Management Workflow › Error Handling and Edge Cases › should handle special characters in category names" classname="workflows\categories-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="workflows\dashboard-workflow.spec.ts" timestamp="2025-07-22T18:57:34.672Z" hostname="Mobile Chrome" tests="39" failures="0" skipped="39" time="0" errors="0">
<testcase name="Dashboard Workflows › Dashboard Loading and Metrics Display › should load dashboard with all components" classname="workflows\dashboard-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Dashboard Workflows › Dashboard Loading and Metrics Display › should display correct metrics values" classname="workflows\dashboard-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Dashboard Workflows › Dashboard Loading and Metrics Display › should refresh dashboard data" classname="workflows\dashboard-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Dashboard Workflows › Dashboard Loading and Metrics Display › should handle dashboard with no data gracefully" classname="workflows\dashboard-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Dashboard Workflows › Dashboard Loading and Metrics Display › should display loading states during data fetch" classname="workflows\dashboard-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Dashboard Workflows › Quick Actions Functionality › should navigate to inventory creation from quick action" classname="workflows\dashboard-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Dashboard Workflows › Quick Actions Functionality › should open quick stock modal" classname="workflows\dashboard-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Dashboard Workflows › Quick Actions Functionality › should navigate to create transaction" classname="workflows\dashboard-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Dashboard Workflows › Quick Actions Functionality › should navigate to reports" classname="workflows\dashboard-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Dashboard Workflows › Quick Actions Functionality › should show tooltips on quick action hover" classname="workflows\dashboard-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Dashboard Workflows › Low Stock Alerts Interaction › should display low stock alerts" classname="workflows\dashboard-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Dashboard Workflows › Low Stock Alerts Interaction › should navigate to item details from low stock alert" classname="workflows\dashboard-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Dashboard Workflows › Low Stock Alerts Interaction › should show alert severity levels" classname="workflows\dashboard-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Dashboard Workflows › Low Stock Alerts Interaction › should dismiss individual alerts" classname="workflows\dashboard-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Dashboard Workflows › Charts and Analytics Interaction › should display inventory chart with data" classname="workflows\dashboard-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Dashboard Workflows › Charts and Analytics Interaction › should interact with chart elements" classname="workflows\dashboard-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Dashboard Workflows › Charts and Analytics Interaction › should switch between chart types" classname="workflows\dashboard-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Dashboard Workflows › Charts and Analytics Interaction › should filter chart data by date range" classname="workflows\dashboard-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Dashboard Workflows › Charts and Analytics Interaction › should export chart data" classname="workflows\dashboard-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Dashboard Workflows › Recent Activities Navigation › should display recent activities" classname="workflows\dashboard-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Dashboard Workflows › Recent Activities Navigation › should navigate to activity details" classname="workflows\dashboard-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Dashboard Workflows › Recent Activities Navigation › should show activity timestamps" classname="workflows\dashboard-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Dashboard Workflows › Recent Activities Navigation › should group activities by type" classname="workflows\dashboard-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Dashboard Workflows › Recent Activities Navigation › should load more activities" classname="workflows\dashboard-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Dashboard Workflows › Dashboard Responsiveness › should adapt to mobile viewport" classname="workflows\dashboard-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Dashboard Workflows › Dashboard Responsiveness › should maintain functionality on tablet" classname="workflows\dashboard-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Dashboard Workflows › Dashboard Responsiveness › should handle orientation changes" classname="workflows\dashboard-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Dashboard Workflows › Dashboard Accessibility › should be keyboard navigable" classname="workflows\dashboard-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Dashboard Workflows › Dashboard Accessibility › should have proper accessibility attributes" classname="workflows\dashboard-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Dashboard Workflows › Dashboard Accessibility › should support screen readers" classname="workflows\dashboard-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Dashboard Workflows › Dashboard Accessibility › should have sufficient color contrast" classname="workflows\dashboard-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Dashboard Workflows › Dashboard Performance › should load within acceptable time limits" classname="workflows\dashboard-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Dashboard Workflows › Dashboard Performance › should handle slow network conditions" classname="workflows\dashboard-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Dashboard Workflows › Dashboard Performance › should efficiently handle large datasets" classname="workflows\dashboard-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Dashboard Workflows › Dashboard Performance › should optimize chart rendering" classname="workflows\dashboard-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Dashboard Workflows › Dashboard Performance › should cache dashboard data appropriately" classname="workflows\dashboard-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Dashboard Workflows › Dashboard Error Handling › should handle API errors gracefully" classname="workflows\dashboard-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Dashboard Workflows › Dashboard Error Handling › should retry failed requests" classname="workflows\dashboard-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Dashboard Workflows › Dashboard Error Handling › should handle network disconnection" classname="workflows\dashboard-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="workflows\inventory-workflow.spec.ts" timestamp="2025-07-22T18:57:34.672Z" hostname="Mobile Chrome" tests="35" failures="0" skipped="35" time="0" errors="0">
<testcase name="Inventory Management Workflows › Create New Inventory Item › should create new inventory item with all required fields" classname="workflows\inventory-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Inventory Management Workflows › Create New Inventory Item › should show validation errors for empty required fields" classname="workflows\inventory-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Inventory Management Workflows › Create New Inventory Item › should prevent duplicate SKU creation" classname="workflows\inventory-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Inventory Management Workflows › Create New Inventory Item › should validate numeric fields" classname="workflows\inventory-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Inventory Management Workflows › Create New Inventory Item › should upload and preview item image" classname="workflows\inventory-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Inventory Management Workflows › Create New Inventory Item › should auto-generate SKU if not provided" classname="workflows\inventory-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Inventory Management Workflows › Create New Inventory Item › should set default category and location if not selected" classname="workflows\inventory-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Inventory Management Workflows › Edit Existing Inventory Item › should edit inventory item successfully" classname="workflows\inventory-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Inventory Management Workflows › Edit Existing Inventory Item › should pre-fill form with existing data" classname="workflows\inventory-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Inventory Management Workflows › Edit Existing Inventory Item › should validate changes before saving" classname="workflows\inventory-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Inventory Management Workflows › Edit Existing Inventory Item › should track inventory changes in audit log" classname="workflows\inventory-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Inventory Management Workflows › Delete Inventory Item › should delete inventory item with confirmation" classname="workflows\inventory-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Inventory Management Workflows › Delete Inventory Item › should cancel deletion when user cancels" classname="workflows\inventory-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Inventory Management Workflows › Delete Inventory Item › should prevent deletion of items with active transactions" classname="workflows\inventory-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Inventory Management Workflows › Bulk Operations › should select multiple items for bulk operations" classname="workflows\inventory-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Inventory Management Workflows › Bulk Operations › should perform bulk price update" classname="workflows\inventory-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Inventory Management Workflows › Bulk Operations › should perform bulk category assignment" classname="workflows\inventory-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Inventory Management Workflows › Bulk Operations › should perform bulk deletion with confirmation" classname="workflows\inventory-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Inventory Management Workflows › Bulk Operations › should handle bulk operations on large datasets" classname="workflows\inventory-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Inventory Management Workflows › Quick Stock Operations › should perform quick stock adjustment" classname="workflows\inventory-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Inventory Management Workflows › Quick Stock Operations › should validate stock adjustment quantities" classname="workflows\inventory-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Inventory Management Workflows › Quick Stock Operations › should record stock adjustments in transaction history" classname="workflows\inventory-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Inventory Management Workflows › Search and Filter Inventory › should search inventory by name" classname="workflows\inventory-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Inventory Management Workflows › Search and Filter Inventory › should filter by category" classname="workflows\inventory-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Inventory Management Workflows › Search and Filter Inventory › should filter by location" classname="workflows\inventory-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Inventory Management Workflows › Search and Filter Inventory › should filter by stock level" classname="workflows\inventory-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Inventory Management Workflows › Search and Filter Inventory › should combine multiple filters" classname="workflows\inventory-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Inventory Management Workflows › Search and Filter Inventory › should clear all filters" classname="workflows\inventory-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Inventory Management Workflows › Search and Filter Inventory › should handle no search results gracefully" classname="workflows\inventory-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Inventory Management Workflows › Inventory Table Interactions › should sort inventory by different columns" classname="workflows\inventory-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Inventory Management Workflows › Inventory Table Interactions › should navigate through pagination" classname="workflows\inventory-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Inventory Management Workflows › Inventory Table Interactions › should display low stock warnings" classname="workflows\inventory-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Inventory Management Workflows › Inventory Table Interactions › should show item details on row click" classname="workflows\inventory-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Inventory Management Workflows › Inventory Performance › should load inventory page quickly" classname="workflows\inventory-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Inventory Management Workflows › Inventory Performance › should handle large inventory datasets efficiently" classname="workflows\inventory-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="workflows\locations-workflow.spec.ts" timestamp="2025-07-22T18:57:34.672Z" hostname="Mobile Chrome" tests="38" failures="0" skipped="38" time="0" errors="0">
<testcase name="Locations Management Workflow › Locations List Page › should display locations list with proper elements" classname="workflows\locations-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Locations Management Workflow › Locations List Page › should load locations data successfully" classname="workflows\locations-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Locations Management Workflow › Locations List Page › should handle empty state when no locations exist" classname="workflows\locations-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Locations Management Workflow › Locations List Page › should handle loading state properly" classname="workflows\locations-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Locations Management Workflow › Locations List Page › should handle error state gracefully" classname="workflows\locations-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Locations Management Workflow › Locations Search and Filter › should search locations by name" classname="workflows\locations-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Locations Management Workflow › Locations Search and Filter › should search locations by address" classname="workflows\locations-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Locations Management Workflow › Locations Search and Filter › should clear search results" classname="workflows\locations-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Locations Management Workflow › Locations Search and Filter › should handle no search results" classname="workflows\locations-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Locations Management Workflow › Locations Sorting › should sort locations by name" classname="workflows\locations-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Locations Management Workflow › Locations Sorting › should sort locations by item quantity" classname="workflows\locations-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Locations Management Workflow › Locations Selection and Bulk Operations › should select individual locations" classname="workflows\locations-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Locations Management Workflow › Locations Selection and Bulk Operations › should select all locations" classname="workflows\locations-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Locations Management Workflow › Locations Selection and Bulk Operations › should deselect all locations" classname="workflows\locations-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Locations Management Workflow › Locations Selection and Bulk Operations › should show bulk actions panel when locations are selected" classname="workflows\locations-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Locations Management Workflow › Location Create Workflow › should navigate to location create page" classname="workflows\locations-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Locations Management Workflow › Location Create Workflow › should create new location successfully" classname="workflows\locations-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Locations Management Workflow › Location Create Workflow › should validate required fields in create form" classname="workflows\locations-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Locations Management Workflow › Location Create Workflow › should cancel location creation" classname="workflows\locations-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Locations Management Workflow › Location Create Workflow › should navigate back from create page" classname="workflows\locations-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Locations Management Workflow › Location Edit Workflow › should navigate to location edit page" classname="workflows\locations-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Locations Management Workflow › Location Edit Workflow › should load existing location data in edit form" classname="workflows\locations-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Locations Management Workflow › Location Edit Workflow › should update location successfully" classname="workflows\locations-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Locations Management Workflow › Location Edit Workflow › should validate required fields in edit form" classname="workflows\locations-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Locations Management Workflow › Location Edit Workflow › should cancel location edit" classname="workflows\locations-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Locations Management Workflow › Location Edit Workflow › should navigate back from edit page" classname="workflows\locations-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Locations Management Workflow › Location Delete Operations › should delete individual location" classname="workflows\locations-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Locations Management Workflow › Location Delete Operations › should handle delete confirmation dialog" classname="workflows\locations-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Locations Management Workflow › Accessibility and Performance › should meet accessibility standards" classname="workflows\locations-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Locations Management Workflow › Accessibility and Performance › should load locations page within performance budget" classname="workflows\locations-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Locations Management Workflow › Accessibility and Performance › should handle keyboard navigation" classname="workflows\locations-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Locations Management Workflow › Role-based Access Control › should allow admin full access to locations" classname="workflows\locations-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Locations Management Workflow › Role-based Access Control › should allow manager access to locations" classname="workflows\locations-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Locations Management Workflow › Role-based Access Control › should allow employee read access to locations" classname="workflows\locations-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Locations Management Workflow › Error Handling and Edge Cases › should handle network errors gracefully" classname="workflows\locations-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Locations Management Workflow › Error Handling and Edge Cases › should handle large datasets efficiently" classname="workflows\locations-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Locations Management Workflow › Error Handling and Edge Cases › should handle special characters in location names" classname="workflows\locations-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Locations Management Workflow › Error Handling and Edge Cases › should handle duplicate location names" classname="workflows\locations-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="workflows\transaction-workflow.spec.ts" timestamp="2025-07-22T18:57:34.672Z" hostname="Mobile Chrome" tests="28" failures="0" skipped="28" time="0" errors="0">
<testcase name="Transaction Workflow Tests › Transaction Builder - Sales Transactions › should create a simple sale transaction" classname="workflows\transaction-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Transaction Workflow Tests › Transaction Builder - Sales Transactions › should create a multi-item sale transaction" classname="workflows\transaction-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Transaction Workflow Tests › Transaction Builder - Sales Transactions › should handle barcode scanning for sales" classname="workflows\transaction-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Transaction Workflow Tests › Transaction Builder - Sales Transactions › should allow removing line items" classname="workflows\transaction-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Transaction Workflow Tests › Transaction Builder - Sales Transactions › should validate minimum quantities" classname="workflows\transaction-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Transaction Workflow Tests › Transaction Builder - Sales Transactions › should handle transaction cancellation" classname="workflows\transaction-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Transaction Workflow Tests › Transaction Builder - Stock Addition Transactions › should create a stock addition transaction" classname="workflows\transaction-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Transaction Workflow Tests › Transaction Builder - Stock Addition Transactions › should handle large quantity stock additions" classname="workflows\transaction-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Transaction Workflow Tests › Transaction History › should display transaction history" classname="workflows\transaction-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Transaction Workflow Tests › Transaction History › should search transactions" classname="workflows\transaction-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Transaction Workflow Tests › Transaction History › should filter transactions by type" classname="workflows\transaction-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Transaction Workflow Tests › Transaction History › should filter transactions by status" classname="workflows\transaction-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Transaction Workflow Tests › Transaction History › should use advanced filters" classname="workflows\transaction-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Transaction Workflow Tests › Transaction History › should export transaction history" classname="workflows\transaction-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Transaction Workflow Tests › Transaction History › should handle pagination" classname="workflows\transaction-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Transaction Workflow Tests › Transaction History › should view transaction details" classname="workflows\transaction-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Transaction Workflow Tests › Transaction Workflow Integration › should create sale and verify in history" classname="workflows\transaction-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Transaction Workflow Tests › Transaction Workflow Integration › should create stock addition and verify in history" classname="workflows\transaction-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Transaction Workflow Tests › Transaction Workflow Integration › should handle transaction workflow with different user roles" classname="workflows\transaction-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Transaction Workflow Tests › Transaction Error Handling › should handle network errors gracefully" classname="workflows\transaction-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Transaction Workflow Tests › Transaction Error Handling › should validate required fields" classname="workflows\transaction-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Transaction Workflow Tests › Transaction Error Handling › should handle invalid product searches" classname="workflows\transaction-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Transaction Workflow Tests › Transaction Accessibility › should be keyboard navigable" classname="workflows\transaction-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Transaction Workflow Tests › Transaction Accessibility › should have proper ARIA labels" classname="workflows\transaction-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Transaction Workflow Tests › Transaction Accessibility › should support screen readers" classname="workflows\transaction-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Transaction Workflow Tests › Transaction Performance › should load transaction builder quickly" classname="workflows\transaction-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Transaction Workflow Tests › Transaction Performance › should handle large transaction history efficiently" classname="workflows\transaction-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Transaction Workflow Tests › Transaction Performance › should handle rapid product additions efficiently" classname="workflows\transaction-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="workflows\user-management-workflow.spec.ts" timestamp="2025-07-22T18:57:34.672Z" hostname="Mobile Chrome" tests="46" failures="0" skipped="46" time="0" errors="0">
<testcase name="User Management Workflows › User Creation Workflow › should create a new user successfully" classname="workflows\user-management-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Management Workflows › User Creation Workflow › should validate required fields" classname="workflows\user-management-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Management Workflows › User Creation Workflow › should validate email format" classname="workflows\user-management-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Management Workflows › User Creation Workflow › should validate password requirements" classname="workflows\user-management-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Management Workflows › User Creation Workflow › should show role permissions when role is selected" classname="workflows\user-management-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Management Workflows › User Creation Workflow › should handle form cancellation" classname="workflows\user-management-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Management Workflows › User Creation Workflow › should disable form during submission" classname="workflows\user-management-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Management Workflows › User Listing and Filtering › should display users list" classname="workflows\user-management-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Management Workflows › User Listing and Filtering › should search users by name" classname="workflows\user-management-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Management Workflows › User Listing and Filtering › should search users by email" classname="workflows\user-management-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Management Workflows › User Listing and Filtering › should filter users by role" classname="workflows\user-management-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Management Workflows › User Listing and Filtering › should filter users by status" classname="workflows\user-management-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Management Workflows › User Listing and Filtering › should sort users by name" classname="workflows\user-management-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Management Workflows › User Listing and Filtering › should combine search and filters" classname="workflows\user-management-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Management Workflows › User Listing and Filtering › should handle empty search results" classname="workflows\user-management-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Management Workflows › User Listing and Filtering › should clear filters" classname="workflows\user-management-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Management Workflows › User Editing Workflow › should edit user details" classname="workflows\user-management-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Management Workflows › User Editing Workflow › should validate edit form" classname="workflows\user-management-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Management Workflows › User Editing Workflow › should cancel edit operation" classname="workflows\user-management-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Management Workflows › User Editing Workflow › should handle edit form loading state" classname="workflows\user-management-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Management Workflows › User Details and Viewing › should view user details" classname="workflows\user-management-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Management Workflows › User Details and Viewing › should close user details modal" classname="workflows\user-management-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Management Workflows › User Details and Viewing › should edit user from details modal" classname="workflows\user-management-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Management Workflows › User Details and Viewing › should display user avatar and status" classname="workflows\user-management-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Management Workflows › User Details and Viewing › should display contact and professional information" classname="workflows\user-management-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Management Workflows › User Deletion Workflow › should delete user successfully" classname="workflows\user-management-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Management Workflows › User Deletion Workflow › should confirm deletion before removing user" classname="workflows\user-management-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Management Workflows › User Deletion Workflow › should handle deletion errors gracefully" classname="workflows\user-management-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Management Workflows › Bulk User Operations › should select multiple users" classname="workflows\user-management-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Management Workflows › Bulk User Operations › should select all users" classname="workflows\user-management-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Management Workflows › Bulk User Operations › should perform bulk status update" classname="workflows\user-management-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Management Workflows › Bulk User Operations › should perform bulk role assignment" classname="workflows\user-management-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Management Workflows › Bulk User Operations › should perform bulk deletion" classname="workflows\user-management-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Management Workflows › Bulk User Operations › should handle bulk operation errors" classname="workflows\user-management-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Management Workflows › User Management Accessibility › should be keyboard navigable" classname="workflows\user-management-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Management Workflows › User Management Accessibility › should have proper ARIA labels" classname="workflows\user-management-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Management Workflows › User Management Accessibility › should support screen readers" classname="workflows\user-management-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Management Workflows › User Management Accessibility › should have sufficient color contrast" classname="workflows\user-management-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Management Workflows › User Management Performance › should load users list efficiently" classname="workflows\user-management-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Management Workflows › User Management Performance › should handle large user datasets" classname="workflows\user-management-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Management Workflows › User Management Performance › should implement efficient search" classname="workflows\user-management-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Management Workflows › User Management Performance › should implement pagination for large datasets" classname="workflows\user-management-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Management Workflows › User Management Error Handling › should handle API errors gracefully" classname="workflows\user-management-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Management Workflows › User Management Error Handling › should handle network disconnection" classname="workflows\user-management-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Management Workflows › User Management Error Handling › should retry failed requests" classname="workflows\user-management-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Management Workflows › User Management Error Handling › should handle validation errors from server" classname="workflows\user-management-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="workflows\auth-workflow.spec.ts" timestamp="2025-07-22T18:57:34.672Z" hostname="Mobile Safari" tests="33" failures="0" skipped="33" time="0" errors="0">
<testcase name="Authentication Workflows › User Login Flow › should login successfully with valid admin credentials" classname="workflows\auth-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Workflows › User Login Flow › should login successfully with valid user credentials" classname="workflows\auth-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Workflows › User Login Flow › should show error with invalid credentials" classname="workflows\auth-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Workflows › User Login Flow › should show validation errors for empty fields" classname="workflows\auth-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Workflows › User Login Flow › should redirect to dashboard after successful login" classname="workflows\auth-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Workflows › User Login Flow › should persist session after page refresh" classname="workflows\auth-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Workflows › User Login Flow › should handle multiple failed login attempts" classname="workflows\auth-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Workflows › User Registration Flow › should register new user successfully" classname="workflows\auth-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Workflows › User Registration Flow › should show error for duplicate email" classname="workflows\auth-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Workflows › User Registration Flow › should validate password strength" classname="workflows\auth-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Workflows › User Registration Flow › should validate email format" classname="workflows\auth-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Workflows › User Registration Flow › should require password confirmation match" classname="workflows\auth-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Workflows › User Registration Flow › should navigate between login and signup pages" classname="workflows\auth-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Workflows › Admin Signup Flow › should register admin with valid admin code" classname="workflows\auth-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Workflows › Admin Signup Flow › should reject invalid admin code" classname="workflows\auth-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Workflows › Admin Signup Flow › should navigate to admin signup from login page" classname="workflows\auth-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Workflows › Password Reset Flow › should send reset email for valid email" classname="workflows\auth-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Workflows › Password Reset Flow › should show error for non-existent email" classname="workflows\auth-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Workflows › Password Reset Flow › should navigate to reset password from login page" classname="workflows\auth-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Workflows › Password Reset Flow › should navigate back to login from reset password" classname="workflows\auth-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Workflows › Session Management and Logout › should logout successfully" classname="workflows\auth-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Workflows › Session Management and Logout › should clear session data on logout" classname="workflows\auth-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Workflows › Session Management and Logout › should handle session expiration" classname="workflows\auth-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Workflows › Session Management and Logout › should maintain session across browser tabs" classname="workflows\auth-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Workflows › Authentication Security › should prevent SQL injection in login form" classname="workflows\auth-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Workflows › Authentication Security › should prevent XSS in login form" classname="workflows\auth-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Workflows › Authentication Security › should enforce HTTPS in production" classname="workflows\auth-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Workflows › Authentication Security › should have secure password requirements" classname="workflows\auth-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Workflows › Authentication Accessibility › should be keyboard navigable" classname="workflows\auth-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Workflows › Authentication Accessibility › should have proper ARIA labels" classname="workflows\auth-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Workflows › Authentication Accessibility › should announce form errors to screen readers" classname="workflows\auth-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Workflows › Authentication Performance › should load login page quickly" classname="workflows\auth-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Workflows › Authentication Performance › should handle login request efficiently" classname="workflows\auth-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="workflows\categories-workflow.spec.ts" timestamp="2025-07-22T18:57:34.672Z" hostname="Mobile Safari" tests="33" failures="0" skipped="33" time="0" errors="0">
<testcase name="Categories Management Workflow › Categories List Page › should display categories list with proper elements" classname="workflows\categories-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Categories Management Workflow › Categories List Page › should load categories data successfully" classname="workflows\categories-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Categories Management Workflow › Categories List Page › should handle empty state when no categories exist" classname="workflows\categories-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Categories Management Workflow › Categories List Page › should handle loading state properly" classname="workflows\categories-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Categories Management Workflow › Categories List Page › should handle error state gracefully" classname="workflows\categories-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Categories Management Workflow › Categories Search and Filter › should search categories by name" classname="workflows\categories-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Categories Management Workflow › Categories Search and Filter › should search categories by description" classname="workflows\categories-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Categories Management Workflow › Categories Search and Filter › should clear search results" classname="workflows\categories-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Categories Management Workflow › Categories Search and Filter › should handle no search results" classname="workflows\categories-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Categories Management Workflow › Categories Sorting › should sort categories by name" classname="workflows\categories-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Categories Management Workflow › Categories Sorting › should sort categories by item count" classname="workflows\categories-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Categories Management Workflow › Categories Sorting › should sort categories by created date" classname="workflows\categories-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Categories Management Workflow › Categories Selection and Bulk Operations › should select individual categories" classname="workflows\categories-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Categories Management Workflow › Categories Selection and Bulk Operations › should select all categories" classname="workflows\categories-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Categories Management Workflow › Categories Selection and Bulk Operations › should deselect all categories" classname="workflows\categories-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Categories Management Workflow › Categories Selection and Bulk Operations › should show bulk actions panel when categories are selected" classname="workflows\categories-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Categories Management Workflow › Category Edit Workflow › should navigate to category edit page" classname="workflows\categories-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Categories Management Workflow › Category Edit Workflow › should load existing category data in edit form" classname="workflows\categories-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Categories Management Workflow › Category Edit Workflow › should update category successfully" classname="workflows\categories-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Categories Management Workflow › Category Edit Workflow › should validate required fields in edit form" classname="workflows\categories-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Categories Management Workflow › Category Edit Workflow › should cancel category edit" classname="workflows\categories-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Categories Management Workflow › Category Edit Workflow › should navigate back from edit page" classname="workflows\categories-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Categories Management Workflow › Category Delete Operations › should delete individual category" classname="workflows\categories-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Categories Management Workflow › Category Delete Operations › should handle delete confirmation dialog" classname="workflows\categories-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Categories Management Workflow › Accessibility and Performance › should meet accessibility standards" classname="workflows\categories-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Categories Management Workflow › Accessibility and Performance › should load categories page within performance budget" classname="workflows\categories-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Categories Management Workflow › Accessibility and Performance › should handle keyboard navigation" classname="workflows\categories-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Categories Management Workflow › Role-based Access Control › should allow admin full access to categories" classname="workflows\categories-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Categories Management Workflow › Role-based Access Control › should allow manager access to categories" classname="workflows\categories-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Categories Management Workflow › Role-based Access Control › should allow employee read access to categories" classname="workflows\categories-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Categories Management Workflow › Error Handling and Edge Cases › should handle network errors gracefully" classname="workflows\categories-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Categories Management Workflow › Error Handling and Edge Cases › should handle large datasets efficiently" classname="workflows\categories-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Categories Management Workflow › Error Handling and Edge Cases › should handle special characters in category names" classname="workflows\categories-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="workflows\dashboard-workflow.spec.ts" timestamp="2025-07-22T18:57:34.672Z" hostname="Mobile Safari" tests="39" failures="0" skipped="39" time="0" errors="0">
<testcase name="Dashboard Workflows › Dashboard Loading and Metrics Display › should load dashboard with all components" classname="workflows\dashboard-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Dashboard Workflows › Dashboard Loading and Metrics Display › should display correct metrics values" classname="workflows\dashboard-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Dashboard Workflows › Dashboard Loading and Metrics Display › should refresh dashboard data" classname="workflows\dashboard-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Dashboard Workflows › Dashboard Loading and Metrics Display › should handle dashboard with no data gracefully" classname="workflows\dashboard-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Dashboard Workflows › Dashboard Loading and Metrics Display › should display loading states during data fetch" classname="workflows\dashboard-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Dashboard Workflows › Quick Actions Functionality › should navigate to inventory creation from quick action" classname="workflows\dashboard-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Dashboard Workflows › Quick Actions Functionality › should open quick stock modal" classname="workflows\dashboard-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Dashboard Workflows › Quick Actions Functionality › should navigate to create transaction" classname="workflows\dashboard-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Dashboard Workflows › Quick Actions Functionality › should navigate to reports" classname="workflows\dashboard-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Dashboard Workflows › Quick Actions Functionality › should show tooltips on quick action hover" classname="workflows\dashboard-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Dashboard Workflows › Low Stock Alerts Interaction › should display low stock alerts" classname="workflows\dashboard-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Dashboard Workflows › Low Stock Alerts Interaction › should navigate to item details from low stock alert" classname="workflows\dashboard-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Dashboard Workflows › Low Stock Alerts Interaction › should show alert severity levels" classname="workflows\dashboard-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Dashboard Workflows › Low Stock Alerts Interaction › should dismiss individual alerts" classname="workflows\dashboard-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Dashboard Workflows › Charts and Analytics Interaction › should display inventory chart with data" classname="workflows\dashboard-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Dashboard Workflows › Charts and Analytics Interaction › should interact with chart elements" classname="workflows\dashboard-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Dashboard Workflows › Charts and Analytics Interaction › should switch between chart types" classname="workflows\dashboard-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Dashboard Workflows › Charts and Analytics Interaction › should filter chart data by date range" classname="workflows\dashboard-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Dashboard Workflows › Charts and Analytics Interaction › should export chart data" classname="workflows\dashboard-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Dashboard Workflows › Recent Activities Navigation › should display recent activities" classname="workflows\dashboard-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Dashboard Workflows › Recent Activities Navigation › should navigate to activity details" classname="workflows\dashboard-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Dashboard Workflows › Recent Activities Navigation › should show activity timestamps" classname="workflows\dashboard-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Dashboard Workflows › Recent Activities Navigation › should group activities by type" classname="workflows\dashboard-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Dashboard Workflows › Recent Activities Navigation › should load more activities" classname="workflows\dashboard-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Dashboard Workflows › Dashboard Responsiveness › should adapt to mobile viewport" classname="workflows\dashboard-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Dashboard Workflows › Dashboard Responsiveness › should maintain functionality on tablet" classname="workflows\dashboard-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Dashboard Workflows › Dashboard Responsiveness › should handle orientation changes" classname="workflows\dashboard-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Dashboard Workflows › Dashboard Accessibility › should be keyboard navigable" classname="workflows\dashboard-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Dashboard Workflows › Dashboard Accessibility › should have proper accessibility attributes" classname="workflows\dashboard-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Dashboard Workflows › Dashboard Accessibility › should support screen readers" classname="workflows\dashboard-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Dashboard Workflows › Dashboard Accessibility › should have sufficient color contrast" classname="workflows\dashboard-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Dashboard Workflows › Dashboard Performance › should load within acceptable time limits" classname="workflows\dashboard-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Dashboard Workflows › Dashboard Performance › should handle slow network conditions" classname="workflows\dashboard-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Dashboard Workflows › Dashboard Performance › should efficiently handle large datasets" classname="workflows\dashboard-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Dashboard Workflows › Dashboard Performance › should optimize chart rendering" classname="workflows\dashboard-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Dashboard Workflows › Dashboard Performance › should cache dashboard data appropriately" classname="workflows\dashboard-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Dashboard Workflows › Dashboard Error Handling › should handle API errors gracefully" classname="workflows\dashboard-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Dashboard Workflows › Dashboard Error Handling › should retry failed requests" classname="workflows\dashboard-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Dashboard Workflows › Dashboard Error Handling › should handle network disconnection" classname="workflows\dashboard-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="workflows\inventory-workflow.spec.ts" timestamp="2025-07-22T18:57:34.672Z" hostname="Mobile Safari" tests="35" failures="0" skipped="35" time="0" errors="0">
<testcase name="Inventory Management Workflows › Create New Inventory Item › should create new inventory item with all required fields" classname="workflows\inventory-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Inventory Management Workflows › Create New Inventory Item › should show validation errors for empty required fields" classname="workflows\inventory-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Inventory Management Workflows › Create New Inventory Item › should prevent duplicate SKU creation" classname="workflows\inventory-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Inventory Management Workflows › Create New Inventory Item › should validate numeric fields" classname="workflows\inventory-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Inventory Management Workflows › Create New Inventory Item › should upload and preview item image" classname="workflows\inventory-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Inventory Management Workflows › Create New Inventory Item › should auto-generate SKU if not provided" classname="workflows\inventory-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Inventory Management Workflows › Create New Inventory Item › should set default category and location if not selected" classname="workflows\inventory-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Inventory Management Workflows › Edit Existing Inventory Item › should edit inventory item successfully" classname="workflows\inventory-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Inventory Management Workflows › Edit Existing Inventory Item › should pre-fill form with existing data" classname="workflows\inventory-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Inventory Management Workflows › Edit Existing Inventory Item › should validate changes before saving" classname="workflows\inventory-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Inventory Management Workflows › Edit Existing Inventory Item › should track inventory changes in audit log" classname="workflows\inventory-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Inventory Management Workflows › Delete Inventory Item › should delete inventory item with confirmation" classname="workflows\inventory-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Inventory Management Workflows › Delete Inventory Item › should cancel deletion when user cancels" classname="workflows\inventory-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Inventory Management Workflows › Delete Inventory Item › should prevent deletion of items with active transactions" classname="workflows\inventory-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Inventory Management Workflows › Bulk Operations › should select multiple items for bulk operations" classname="workflows\inventory-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Inventory Management Workflows › Bulk Operations › should perform bulk price update" classname="workflows\inventory-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Inventory Management Workflows › Bulk Operations › should perform bulk category assignment" classname="workflows\inventory-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Inventory Management Workflows › Bulk Operations › should perform bulk deletion with confirmation" classname="workflows\inventory-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Inventory Management Workflows › Bulk Operations › should handle bulk operations on large datasets" classname="workflows\inventory-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Inventory Management Workflows › Quick Stock Operations › should perform quick stock adjustment" classname="workflows\inventory-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Inventory Management Workflows › Quick Stock Operations › should validate stock adjustment quantities" classname="workflows\inventory-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Inventory Management Workflows › Quick Stock Operations › should record stock adjustments in transaction history" classname="workflows\inventory-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Inventory Management Workflows › Search and Filter Inventory › should search inventory by name" classname="workflows\inventory-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Inventory Management Workflows › Search and Filter Inventory › should filter by category" classname="workflows\inventory-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Inventory Management Workflows › Search and Filter Inventory › should filter by location" classname="workflows\inventory-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Inventory Management Workflows › Search and Filter Inventory › should filter by stock level" classname="workflows\inventory-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Inventory Management Workflows › Search and Filter Inventory › should combine multiple filters" classname="workflows\inventory-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Inventory Management Workflows › Search and Filter Inventory › should clear all filters" classname="workflows\inventory-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Inventory Management Workflows › Search and Filter Inventory › should handle no search results gracefully" classname="workflows\inventory-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Inventory Management Workflows › Inventory Table Interactions › should sort inventory by different columns" classname="workflows\inventory-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Inventory Management Workflows › Inventory Table Interactions › should navigate through pagination" classname="workflows\inventory-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Inventory Management Workflows › Inventory Table Interactions › should display low stock warnings" classname="workflows\inventory-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Inventory Management Workflows › Inventory Table Interactions › should show item details on row click" classname="workflows\inventory-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Inventory Management Workflows › Inventory Performance › should load inventory page quickly" classname="workflows\inventory-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Inventory Management Workflows › Inventory Performance › should handle large inventory datasets efficiently" classname="workflows\inventory-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="workflows\locations-workflow.spec.ts" timestamp="2025-07-22T18:57:34.672Z" hostname="Mobile Safari" tests="38" failures="0" skipped="38" time="0" errors="0">
<testcase name="Locations Management Workflow › Locations List Page › should display locations list with proper elements" classname="workflows\locations-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Locations Management Workflow › Locations List Page › should load locations data successfully" classname="workflows\locations-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Locations Management Workflow › Locations List Page › should handle empty state when no locations exist" classname="workflows\locations-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Locations Management Workflow › Locations List Page › should handle loading state properly" classname="workflows\locations-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Locations Management Workflow › Locations List Page › should handle error state gracefully" classname="workflows\locations-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Locations Management Workflow › Locations Search and Filter › should search locations by name" classname="workflows\locations-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Locations Management Workflow › Locations Search and Filter › should search locations by address" classname="workflows\locations-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Locations Management Workflow › Locations Search and Filter › should clear search results" classname="workflows\locations-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Locations Management Workflow › Locations Search and Filter › should handle no search results" classname="workflows\locations-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Locations Management Workflow › Locations Sorting › should sort locations by name" classname="workflows\locations-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Locations Management Workflow › Locations Sorting › should sort locations by item quantity" classname="workflows\locations-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Locations Management Workflow › Locations Selection and Bulk Operations › should select individual locations" classname="workflows\locations-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Locations Management Workflow › Locations Selection and Bulk Operations › should select all locations" classname="workflows\locations-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Locations Management Workflow › Locations Selection and Bulk Operations › should deselect all locations" classname="workflows\locations-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Locations Management Workflow › Locations Selection and Bulk Operations › should show bulk actions panel when locations are selected" classname="workflows\locations-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Locations Management Workflow › Location Create Workflow › should navigate to location create page" classname="workflows\locations-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Locations Management Workflow › Location Create Workflow › should create new location successfully" classname="workflows\locations-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Locations Management Workflow › Location Create Workflow › should validate required fields in create form" classname="workflows\locations-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Locations Management Workflow › Location Create Workflow › should cancel location creation" classname="workflows\locations-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Locations Management Workflow › Location Create Workflow › should navigate back from create page" classname="workflows\locations-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Locations Management Workflow › Location Edit Workflow › should navigate to location edit page" classname="workflows\locations-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Locations Management Workflow › Location Edit Workflow › should load existing location data in edit form" classname="workflows\locations-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Locations Management Workflow › Location Edit Workflow › should update location successfully" classname="workflows\locations-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Locations Management Workflow › Location Edit Workflow › should validate required fields in edit form" classname="workflows\locations-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Locations Management Workflow › Location Edit Workflow › should cancel location edit" classname="workflows\locations-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Locations Management Workflow › Location Edit Workflow › should navigate back from edit page" classname="workflows\locations-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Locations Management Workflow › Location Delete Operations › should delete individual location" classname="workflows\locations-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Locations Management Workflow › Location Delete Operations › should handle delete confirmation dialog" classname="workflows\locations-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Locations Management Workflow › Accessibility and Performance › should meet accessibility standards" classname="workflows\locations-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Locations Management Workflow › Accessibility and Performance › should load locations page within performance budget" classname="workflows\locations-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Locations Management Workflow › Accessibility and Performance › should handle keyboard navigation" classname="workflows\locations-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Locations Management Workflow › Role-based Access Control › should allow admin full access to locations" classname="workflows\locations-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Locations Management Workflow › Role-based Access Control › should allow manager access to locations" classname="workflows\locations-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Locations Management Workflow › Role-based Access Control › should allow employee read access to locations" classname="workflows\locations-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Locations Management Workflow › Error Handling and Edge Cases › should handle network errors gracefully" classname="workflows\locations-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Locations Management Workflow › Error Handling and Edge Cases › should handle large datasets efficiently" classname="workflows\locations-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Locations Management Workflow › Error Handling and Edge Cases › should handle special characters in location names" classname="workflows\locations-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Locations Management Workflow › Error Handling and Edge Cases › should handle duplicate location names" classname="workflows\locations-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="workflows\transaction-workflow.spec.ts" timestamp="2025-07-22T18:57:34.672Z" hostname="Mobile Safari" tests="28" failures="0" skipped="28" time="0" errors="0">
<testcase name="Transaction Workflow Tests › Transaction Builder - Sales Transactions › should create a simple sale transaction" classname="workflows\transaction-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Transaction Workflow Tests › Transaction Builder - Sales Transactions › should create a multi-item sale transaction" classname="workflows\transaction-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Transaction Workflow Tests › Transaction Builder - Sales Transactions › should handle barcode scanning for sales" classname="workflows\transaction-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Transaction Workflow Tests › Transaction Builder - Sales Transactions › should allow removing line items" classname="workflows\transaction-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Transaction Workflow Tests › Transaction Builder - Sales Transactions › should validate minimum quantities" classname="workflows\transaction-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Transaction Workflow Tests › Transaction Builder - Sales Transactions › should handle transaction cancellation" classname="workflows\transaction-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Transaction Workflow Tests › Transaction Builder - Stock Addition Transactions › should create a stock addition transaction" classname="workflows\transaction-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Transaction Workflow Tests › Transaction Builder - Stock Addition Transactions › should handle large quantity stock additions" classname="workflows\transaction-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Transaction Workflow Tests › Transaction History › should display transaction history" classname="workflows\transaction-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Transaction Workflow Tests › Transaction History › should search transactions" classname="workflows\transaction-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Transaction Workflow Tests › Transaction History › should filter transactions by type" classname="workflows\transaction-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Transaction Workflow Tests › Transaction History › should filter transactions by status" classname="workflows\transaction-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Transaction Workflow Tests › Transaction History › should use advanced filters" classname="workflows\transaction-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Transaction Workflow Tests › Transaction History › should export transaction history" classname="workflows\transaction-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Transaction Workflow Tests › Transaction History › should handle pagination" classname="workflows\transaction-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Transaction Workflow Tests › Transaction History › should view transaction details" classname="workflows\transaction-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Transaction Workflow Tests › Transaction Workflow Integration › should create sale and verify in history" classname="workflows\transaction-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Transaction Workflow Tests › Transaction Workflow Integration › should create stock addition and verify in history" classname="workflows\transaction-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Transaction Workflow Tests › Transaction Workflow Integration › should handle transaction workflow with different user roles" classname="workflows\transaction-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Transaction Workflow Tests › Transaction Error Handling › should handle network errors gracefully" classname="workflows\transaction-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Transaction Workflow Tests › Transaction Error Handling › should validate required fields" classname="workflows\transaction-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Transaction Workflow Tests › Transaction Error Handling › should handle invalid product searches" classname="workflows\transaction-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Transaction Workflow Tests › Transaction Accessibility › should be keyboard navigable" classname="workflows\transaction-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Transaction Workflow Tests › Transaction Accessibility › should have proper ARIA labels" classname="workflows\transaction-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Transaction Workflow Tests › Transaction Accessibility › should support screen readers" classname="workflows\transaction-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Transaction Workflow Tests › Transaction Performance › should load transaction builder quickly" classname="workflows\transaction-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Transaction Workflow Tests › Transaction Performance › should handle large transaction history efficiently" classname="workflows\transaction-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Transaction Workflow Tests › Transaction Performance › should handle rapid product additions efficiently" classname="workflows\transaction-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="workflows\user-management-workflow.spec.ts" timestamp="2025-07-22T18:57:34.672Z" hostname="Mobile Safari" tests="46" failures="0" skipped="46" time="0" errors="0">
<testcase name="User Management Workflows › User Creation Workflow › should create a new user successfully" classname="workflows\user-management-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Management Workflows › User Creation Workflow › should validate required fields" classname="workflows\user-management-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Management Workflows › User Creation Workflow › should validate email format" classname="workflows\user-management-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Management Workflows › User Creation Workflow › should validate password requirements" classname="workflows\user-management-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Management Workflows › User Creation Workflow › should show role permissions when role is selected" classname="workflows\user-management-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Management Workflows › User Creation Workflow › should handle form cancellation" classname="workflows\user-management-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Management Workflows › User Creation Workflow › should disable form during submission" classname="workflows\user-management-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Management Workflows › User Listing and Filtering › should display users list" classname="workflows\user-management-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Management Workflows › User Listing and Filtering › should search users by name" classname="workflows\user-management-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Management Workflows › User Listing and Filtering › should search users by email" classname="workflows\user-management-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Management Workflows › User Listing and Filtering › should filter users by role" classname="workflows\user-management-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Management Workflows › User Listing and Filtering › should filter users by status" classname="workflows\user-management-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Management Workflows › User Listing and Filtering › should sort users by name" classname="workflows\user-management-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Management Workflows › User Listing and Filtering › should combine search and filters" classname="workflows\user-management-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Management Workflows › User Listing and Filtering › should handle empty search results" classname="workflows\user-management-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Management Workflows › User Listing and Filtering › should clear filters" classname="workflows\user-management-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Management Workflows › User Editing Workflow › should edit user details" classname="workflows\user-management-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Management Workflows › User Editing Workflow › should validate edit form" classname="workflows\user-management-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Management Workflows › User Editing Workflow › should cancel edit operation" classname="workflows\user-management-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Management Workflows › User Editing Workflow › should handle edit form loading state" classname="workflows\user-management-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Management Workflows › User Details and Viewing › should view user details" classname="workflows\user-management-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Management Workflows › User Details and Viewing › should close user details modal" classname="workflows\user-management-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Management Workflows › User Details and Viewing › should edit user from details modal" classname="workflows\user-management-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Management Workflows › User Details and Viewing › should display user avatar and status" classname="workflows\user-management-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Management Workflows › User Details and Viewing › should display contact and professional information" classname="workflows\user-management-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Management Workflows › User Deletion Workflow › should delete user successfully" classname="workflows\user-management-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Management Workflows › User Deletion Workflow › should confirm deletion before removing user" classname="workflows\user-management-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Management Workflows › User Deletion Workflow › should handle deletion errors gracefully" classname="workflows\user-management-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Management Workflows › Bulk User Operations › should select multiple users" classname="workflows\user-management-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Management Workflows › Bulk User Operations › should select all users" classname="workflows\user-management-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Management Workflows › Bulk User Operations › should perform bulk status update" classname="workflows\user-management-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Management Workflows › Bulk User Operations › should perform bulk role assignment" classname="workflows\user-management-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Management Workflows › Bulk User Operations › should perform bulk deletion" classname="workflows\user-management-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Management Workflows › Bulk User Operations › should handle bulk operation errors" classname="workflows\user-management-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Management Workflows › User Management Accessibility › should be keyboard navigable" classname="workflows\user-management-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Management Workflows › User Management Accessibility › should have proper ARIA labels" classname="workflows\user-management-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Management Workflows › User Management Accessibility › should support screen readers" classname="workflows\user-management-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Management Workflows › User Management Accessibility › should have sufficient color contrast" classname="workflows\user-management-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Management Workflows › User Management Performance › should load users list efficiently" classname="workflows\user-management-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Management Workflows › User Management Performance › should handle large user datasets" classname="workflows\user-management-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Management Workflows › User Management Performance › should implement efficient search" classname="workflows\user-management-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Management Workflows › User Management Performance › should implement pagination for large datasets" classname="workflows\user-management-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Management Workflows › User Management Error Handling › should handle API errors gracefully" classname="workflows\user-management-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Management Workflows › User Management Error Handling › should handle network disconnection" classname="workflows\user-management-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Management Workflows › User Management Error Handling › should retry failed requests" classname="workflows\user-management-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Management Workflows › User Management Error Handling › should handle validation errors from server" classname="workflows\user-management-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="workflows\auth-workflow.spec.ts" timestamp="2025-07-22T18:57:34.672Z" hostname="Microsoft Edge" tests="33" failures="0" skipped="33" time="0" errors="0">
<testcase name="Authentication Workflows › User Login Flow › should login successfully with valid admin credentials" classname="workflows\auth-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Workflows › User Login Flow › should login successfully with valid user credentials" classname="workflows\auth-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Workflows › User Login Flow › should show error with invalid credentials" classname="workflows\auth-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Workflows › User Login Flow › should show validation errors for empty fields" classname="workflows\auth-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Workflows › User Login Flow › should redirect to dashboard after successful login" classname="workflows\auth-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Workflows › User Login Flow › should persist session after page refresh" classname="workflows\auth-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Workflows › User Login Flow › should handle multiple failed login attempts" classname="workflows\auth-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Workflows › User Registration Flow › should register new user successfully" classname="workflows\auth-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Workflows › User Registration Flow › should show error for duplicate email" classname="workflows\auth-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Workflows › User Registration Flow › should validate password strength" classname="workflows\auth-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Workflows › User Registration Flow › should validate email format" classname="workflows\auth-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Workflows › User Registration Flow › should require password confirmation match" classname="workflows\auth-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Workflows › User Registration Flow › should navigate between login and signup pages" classname="workflows\auth-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Workflows › Admin Signup Flow › should register admin with valid admin code" classname="workflows\auth-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Workflows › Admin Signup Flow › should reject invalid admin code" classname="workflows\auth-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Workflows › Admin Signup Flow › should navigate to admin signup from login page" classname="workflows\auth-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Workflows › Password Reset Flow › should send reset email for valid email" classname="workflows\auth-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Workflows › Password Reset Flow › should show error for non-existent email" classname="workflows\auth-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Workflows › Password Reset Flow › should navigate to reset password from login page" classname="workflows\auth-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Workflows › Password Reset Flow › should navigate back to login from reset password" classname="workflows\auth-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Workflows › Session Management and Logout › should logout successfully" classname="workflows\auth-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Workflows › Session Management and Logout › should clear session data on logout" classname="workflows\auth-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Workflows › Session Management and Logout › should handle session expiration" classname="workflows\auth-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Workflows › Session Management and Logout › should maintain session across browser tabs" classname="workflows\auth-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Workflows › Authentication Security › should prevent SQL injection in login form" classname="workflows\auth-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Workflows › Authentication Security › should prevent XSS in login form" classname="workflows\auth-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Workflows › Authentication Security › should enforce HTTPS in production" classname="workflows\auth-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Workflows › Authentication Security › should have secure password requirements" classname="workflows\auth-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Workflows › Authentication Accessibility › should be keyboard navigable" classname="workflows\auth-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Workflows › Authentication Accessibility › should have proper ARIA labels" classname="workflows\auth-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Workflows › Authentication Accessibility › should announce form errors to screen readers" classname="workflows\auth-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Workflows › Authentication Performance › should load login page quickly" classname="workflows\auth-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Workflows › Authentication Performance › should handle login request efficiently" classname="workflows\auth-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="workflows\categories-workflow.spec.ts" timestamp="2025-07-22T18:57:34.672Z" hostname="Microsoft Edge" tests="33" failures="0" skipped="33" time="0" errors="0">
<testcase name="Categories Management Workflow › Categories List Page › should display categories list with proper elements" classname="workflows\categories-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Categories Management Workflow › Categories List Page › should load categories data successfully" classname="workflows\categories-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Categories Management Workflow › Categories List Page › should handle empty state when no categories exist" classname="workflows\categories-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Categories Management Workflow › Categories List Page › should handle loading state properly" classname="workflows\categories-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Categories Management Workflow › Categories List Page › should handle error state gracefully" classname="workflows\categories-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Categories Management Workflow › Categories Search and Filter › should search categories by name" classname="workflows\categories-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Categories Management Workflow › Categories Search and Filter › should search categories by description" classname="workflows\categories-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Categories Management Workflow › Categories Search and Filter › should clear search results" classname="workflows\categories-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Categories Management Workflow › Categories Search and Filter › should handle no search results" classname="workflows\categories-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Categories Management Workflow › Categories Sorting › should sort categories by name" classname="workflows\categories-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Categories Management Workflow › Categories Sorting › should sort categories by item count" classname="workflows\categories-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Categories Management Workflow › Categories Sorting › should sort categories by created date" classname="workflows\categories-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Categories Management Workflow › Categories Selection and Bulk Operations › should select individual categories" classname="workflows\categories-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Categories Management Workflow › Categories Selection and Bulk Operations › should select all categories" classname="workflows\categories-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Categories Management Workflow › Categories Selection and Bulk Operations › should deselect all categories" classname="workflows\categories-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Categories Management Workflow › Categories Selection and Bulk Operations › should show bulk actions panel when categories are selected" classname="workflows\categories-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Categories Management Workflow › Category Edit Workflow › should navigate to category edit page" classname="workflows\categories-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Categories Management Workflow › Category Edit Workflow › should load existing category data in edit form" classname="workflows\categories-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Categories Management Workflow › Category Edit Workflow › should update category successfully" classname="workflows\categories-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Categories Management Workflow › Category Edit Workflow › should validate required fields in edit form" classname="workflows\categories-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Categories Management Workflow › Category Edit Workflow › should cancel category edit" classname="workflows\categories-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Categories Management Workflow › Category Edit Workflow › should navigate back from edit page" classname="workflows\categories-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Categories Management Workflow › Category Delete Operations › should delete individual category" classname="workflows\categories-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Categories Management Workflow › Category Delete Operations › should handle delete confirmation dialog" classname="workflows\categories-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Categories Management Workflow › Accessibility and Performance › should meet accessibility standards" classname="workflows\categories-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Categories Management Workflow › Accessibility and Performance › should load categories page within performance budget" classname="workflows\categories-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Categories Management Workflow › Accessibility and Performance › should handle keyboard navigation" classname="workflows\categories-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Categories Management Workflow › Role-based Access Control › should allow admin full access to categories" classname="workflows\categories-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Categories Management Workflow › Role-based Access Control › should allow manager access to categories" classname="workflows\categories-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Categories Management Workflow › Role-based Access Control › should allow employee read access to categories" classname="workflows\categories-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Categories Management Workflow › Error Handling and Edge Cases › should handle network errors gracefully" classname="workflows\categories-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Categories Management Workflow › Error Handling and Edge Cases › should handle large datasets efficiently" classname="workflows\categories-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Categories Management Workflow › Error Handling and Edge Cases › should handle special characters in category names" classname="workflows\categories-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="workflows\dashboard-workflow.spec.ts" timestamp="2025-07-22T18:57:34.672Z" hostname="Microsoft Edge" tests="39" failures="0" skipped="39" time="0" errors="0">
<testcase name="Dashboard Workflows › Dashboard Loading and Metrics Display › should load dashboard with all components" classname="workflows\dashboard-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Dashboard Workflows › Dashboard Loading and Metrics Display › should display correct metrics values" classname="workflows\dashboard-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Dashboard Workflows › Dashboard Loading and Metrics Display › should refresh dashboard data" classname="workflows\dashboard-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Dashboard Workflows › Dashboard Loading and Metrics Display › should handle dashboard with no data gracefully" classname="workflows\dashboard-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Dashboard Workflows › Dashboard Loading and Metrics Display › should display loading states during data fetch" classname="workflows\dashboard-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Dashboard Workflows › Quick Actions Functionality › should navigate to inventory creation from quick action" classname="workflows\dashboard-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Dashboard Workflows › Quick Actions Functionality › should open quick stock modal" classname="workflows\dashboard-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Dashboard Workflows › Quick Actions Functionality › should navigate to create transaction" classname="workflows\dashboard-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Dashboard Workflows › Quick Actions Functionality › should navigate to reports" classname="workflows\dashboard-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Dashboard Workflows › Quick Actions Functionality › should show tooltips on quick action hover" classname="workflows\dashboard-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Dashboard Workflows › Low Stock Alerts Interaction › should display low stock alerts" classname="workflows\dashboard-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Dashboard Workflows › Low Stock Alerts Interaction › should navigate to item details from low stock alert" classname="workflows\dashboard-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Dashboard Workflows › Low Stock Alerts Interaction › should show alert severity levels" classname="workflows\dashboard-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Dashboard Workflows › Low Stock Alerts Interaction › should dismiss individual alerts" classname="workflows\dashboard-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Dashboard Workflows › Charts and Analytics Interaction › should display inventory chart with data" classname="workflows\dashboard-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Dashboard Workflows › Charts and Analytics Interaction › should interact with chart elements" classname="workflows\dashboard-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Dashboard Workflows › Charts and Analytics Interaction › should switch between chart types" classname="workflows\dashboard-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Dashboard Workflows › Charts and Analytics Interaction › should filter chart data by date range" classname="workflows\dashboard-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Dashboard Workflows › Charts and Analytics Interaction › should export chart data" classname="workflows\dashboard-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Dashboard Workflows › Recent Activities Navigation › should display recent activities" classname="workflows\dashboard-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Dashboard Workflows › Recent Activities Navigation › should navigate to activity details" classname="workflows\dashboard-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Dashboard Workflows › Recent Activities Navigation › should show activity timestamps" classname="workflows\dashboard-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Dashboard Workflows › Recent Activities Navigation › should group activities by type" classname="workflows\dashboard-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Dashboard Workflows › Recent Activities Navigation › should load more activities" classname="workflows\dashboard-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Dashboard Workflows › Dashboard Responsiveness › should adapt to mobile viewport" classname="workflows\dashboard-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Dashboard Workflows › Dashboard Responsiveness › should maintain functionality on tablet" classname="workflows\dashboard-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Dashboard Workflows › Dashboard Responsiveness › should handle orientation changes" classname="workflows\dashboard-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Dashboard Workflows › Dashboard Accessibility › should be keyboard navigable" classname="workflows\dashboard-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Dashboard Workflows › Dashboard Accessibility › should have proper accessibility attributes" classname="workflows\dashboard-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Dashboard Workflows › Dashboard Accessibility › should support screen readers" classname="workflows\dashboard-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Dashboard Workflows › Dashboard Accessibility › should have sufficient color contrast" classname="workflows\dashboard-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Dashboard Workflows › Dashboard Performance › should load within acceptable time limits" classname="workflows\dashboard-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Dashboard Workflows › Dashboard Performance › should handle slow network conditions" classname="workflows\dashboard-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Dashboard Workflows › Dashboard Performance › should efficiently handle large datasets" classname="workflows\dashboard-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Dashboard Workflows › Dashboard Performance › should optimize chart rendering" classname="workflows\dashboard-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Dashboard Workflows › Dashboard Performance › should cache dashboard data appropriately" classname="workflows\dashboard-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Dashboard Workflows › Dashboard Error Handling › should handle API errors gracefully" classname="workflows\dashboard-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Dashboard Workflows › Dashboard Error Handling › should retry failed requests" classname="workflows\dashboard-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Dashboard Workflows › Dashboard Error Handling › should handle network disconnection" classname="workflows\dashboard-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="workflows\inventory-workflow.spec.ts" timestamp="2025-07-22T18:57:34.672Z" hostname="Microsoft Edge" tests="35" failures="0" skipped="35" time="0" errors="0">
<testcase name="Inventory Management Workflows › Create New Inventory Item › should create new inventory item with all required fields" classname="workflows\inventory-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Inventory Management Workflows › Create New Inventory Item › should show validation errors for empty required fields" classname="workflows\inventory-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Inventory Management Workflows › Create New Inventory Item › should prevent duplicate SKU creation" classname="workflows\inventory-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Inventory Management Workflows › Create New Inventory Item › should validate numeric fields" classname="workflows\inventory-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Inventory Management Workflows › Create New Inventory Item › should upload and preview item image" classname="workflows\inventory-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Inventory Management Workflows › Create New Inventory Item › should auto-generate SKU if not provided" classname="workflows\inventory-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Inventory Management Workflows › Create New Inventory Item › should set default category and location if not selected" classname="workflows\inventory-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Inventory Management Workflows › Edit Existing Inventory Item › should edit inventory item successfully" classname="workflows\inventory-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Inventory Management Workflows › Edit Existing Inventory Item › should pre-fill form with existing data" classname="workflows\inventory-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Inventory Management Workflows › Edit Existing Inventory Item › should validate changes before saving" classname="workflows\inventory-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Inventory Management Workflows › Edit Existing Inventory Item › should track inventory changes in audit log" classname="workflows\inventory-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Inventory Management Workflows › Delete Inventory Item › should delete inventory item with confirmation" classname="workflows\inventory-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Inventory Management Workflows › Delete Inventory Item › should cancel deletion when user cancels" classname="workflows\inventory-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Inventory Management Workflows › Delete Inventory Item › should prevent deletion of items with active transactions" classname="workflows\inventory-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Inventory Management Workflows › Bulk Operations › should select multiple items for bulk operations" classname="workflows\inventory-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Inventory Management Workflows › Bulk Operations › should perform bulk price update" classname="workflows\inventory-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Inventory Management Workflows › Bulk Operations › should perform bulk category assignment" classname="workflows\inventory-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Inventory Management Workflows › Bulk Operations › should perform bulk deletion with confirmation" classname="workflows\inventory-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Inventory Management Workflows › Bulk Operations › should handle bulk operations on large datasets" classname="workflows\inventory-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Inventory Management Workflows › Quick Stock Operations › should perform quick stock adjustment" classname="workflows\inventory-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Inventory Management Workflows › Quick Stock Operations › should validate stock adjustment quantities" classname="workflows\inventory-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Inventory Management Workflows › Quick Stock Operations › should record stock adjustments in transaction history" classname="workflows\inventory-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Inventory Management Workflows › Search and Filter Inventory › should search inventory by name" classname="workflows\inventory-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Inventory Management Workflows › Search and Filter Inventory › should filter by category" classname="workflows\inventory-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Inventory Management Workflows › Search and Filter Inventory › should filter by location" classname="workflows\inventory-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Inventory Management Workflows › Search and Filter Inventory › should filter by stock level" classname="workflows\inventory-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Inventory Management Workflows › Search and Filter Inventory › should combine multiple filters" classname="workflows\inventory-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Inventory Management Workflows › Search and Filter Inventory › should clear all filters" classname="workflows\inventory-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Inventory Management Workflows › Search and Filter Inventory › should handle no search results gracefully" classname="workflows\inventory-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Inventory Management Workflows › Inventory Table Interactions › should sort inventory by different columns" classname="workflows\inventory-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Inventory Management Workflows › Inventory Table Interactions › should navigate through pagination" classname="workflows\inventory-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Inventory Management Workflows › Inventory Table Interactions › should display low stock warnings" classname="workflows\inventory-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Inventory Management Workflows › Inventory Table Interactions › should show item details on row click" classname="workflows\inventory-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Inventory Management Workflows › Inventory Performance › should load inventory page quickly" classname="workflows\inventory-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Inventory Management Workflows › Inventory Performance › should handle large inventory datasets efficiently" classname="workflows\inventory-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="workflows\locations-workflow.spec.ts" timestamp="2025-07-22T18:57:34.672Z" hostname="Microsoft Edge" tests="38" failures="0" skipped="38" time="0" errors="0">
<testcase name="Locations Management Workflow › Locations List Page › should display locations list with proper elements" classname="workflows\locations-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Locations Management Workflow › Locations List Page › should load locations data successfully" classname="workflows\locations-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Locations Management Workflow › Locations List Page › should handle empty state when no locations exist" classname="workflows\locations-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Locations Management Workflow › Locations List Page › should handle loading state properly" classname="workflows\locations-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Locations Management Workflow › Locations List Page › should handle error state gracefully" classname="workflows\locations-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Locations Management Workflow › Locations Search and Filter › should search locations by name" classname="workflows\locations-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Locations Management Workflow › Locations Search and Filter › should search locations by address" classname="workflows\locations-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Locations Management Workflow › Locations Search and Filter › should clear search results" classname="workflows\locations-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Locations Management Workflow › Locations Search and Filter › should handle no search results" classname="workflows\locations-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Locations Management Workflow › Locations Sorting › should sort locations by name" classname="workflows\locations-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Locations Management Workflow › Locations Sorting › should sort locations by item quantity" classname="workflows\locations-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Locations Management Workflow › Locations Selection and Bulk Operations › should select individual locations" classname="workflows\locations-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Locations Management Workflow › Locations Selection and Bulk Operations › should select all locations" classname="workflows\locations-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Locations Management Workflow › Locations Selection and Bulk Operations › should deselect all locations" classname="workflows\locations-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Locations Management Workflow › Locations Selection and Bulk Operations › should show bulk actions panel when locations are selected" classname="workflows\locations-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Locations Management Workflow › Location Create Workflow › should navigate to location create page" classname="workflows\locations-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Locations Management Workflow › Location Create Workflow › should create new location successfully" classname="workflows\locations-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Locations Management Workflow › Location Create Workflow › should validate required fields in create form" classname="workflows\locations-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Locations Management Workflow › Location Create Workflow › should cancel location creation" classname="workflows\locations-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Locations Management Workflow › Location Create Workflow › should navigate back from create page" classname="workflows\locations-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Locations Management Workflow › Location Edit Workflow › should navigate to location edit page" classname="workflows\locations-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Locations Management Workflow › Location Edit Workflow › should load existing location data in edit form" classname="workflows\locations-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Locations Management Workflow › Location Edit Workflow › should update location successfully" classname="workflows\locations-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Locations Management Workflow › Location Edit Workflow › should validate required fields in edit form" classname="workflows\locations-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Locations Management Workflow › Location Edit Workflow › should cancel location edit" classname="workflows\locations-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Locations Management Workflow › Location Edit Workflow › should navigate back from edit page" classname="workflows\locations-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Locations Management Workflow › Location Delete Operations › should delete individual location" classname="workflows\locations-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Locations Management Workflow › Location Delete Operations › should handle delete confirmation dialog" classname="workflows\locations-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Locations Management Workflow › Accessibility and Performance › should meet accessibility standards" classname="workflows\locations-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Locations Management Workflow › Accessibility and Performance › should load locations page within performance budget" classname="workflows\locations-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Locations Management Workflow › Accessibility and Performance › should handle keyboard navigation" classname="workflows\locations-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Locations Management Workflow › Role-based Access Control › should allow admin full access to locations" classname="workflows\locations-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Locations Management Workflow › Role-based Access Control › should allow manager access to locations" classname="workflows\locations-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Locations Management Workflow › Role-based Access Control › should allow employee read access to locations" classname="workflows\locations-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Locations Management Workflow › Error Handling and Edge Cases › should handle network errors gracefully" classname="workflows\locations-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Locations Management Workflow › Error Handling and Edge Cases › should handle large datasets efficiently" classname="workflows\locations-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Locations Management Workflow › Error Handling and Edge Cases › should handle special characters in location names" classname="workflows\locations-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Locations Management Workflow › Error Handling and Edge Cases › should handle duplicate location names" classname="workflows\locations-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="workflows\transaction-workflow.spec.ts" timestamp="2025-07-22T18:57:34.672Z" hostname="Microsoft Edge" tests="28" failures="0" skipped="28" time="0" errors="0">
<testcase name="Transaction Workflow Tests › Transaction Builder - Sales Transactions › should create a simple sale transaction" classname="workflows\transaction-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Transaction Workflow Tests › Transaction Builder - Sales Transactions › should create a multi-item sale transaction" classname="workflows\transaction-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Transaction Workflow Tests › Transaction Builder - Sales Transactions › should handle barcode scanning for sales" classname="workflows\transaction-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Transaction Workflow Tests › Transaction Builder - Sales Transactions › should allow removing line items" classname="workflows\transaction-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Transaction Workflow Tests › Transaction Builder - Sales Transactions › should validate minimum quantities" classname="workflows\transaction-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Transaction Workflow Tests › Transaction Builder - Sales Transactions › should handle transaction cancellation" classname="workflows\transaction-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Transaction Workflow Tests › Transaction Builder - Stock Addition Transactions › should create a stock addition transaction" classname="workflows\transaction-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Transaction Workflow Tests › Transaction Builder - Stock Addition Transactions › should handle large quantity stock additions" classname="workflows\transaction-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Transaction Workflow Tests › Transaction History › should display transaction history" classname="workflows\transaction-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Transaction Workflow Tests › Transaction History › should search transactions" classname="workflows\transaction-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Transaction Workflow Tests › Transaction History › should filter transactions by type" classname="workflows\transaction-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Transaction Workflow Tests › Transaction History › should filter transactions by status" classname="workflows\transaction-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Transaction Workflow Tests › Transaction History › should use advanced filters" classname="workflows\transaction-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Transaction Workflow Tests › Transaction History › should export transaction history" classname="workflows\transaction-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Transaction Workflow Tests › Transaction History › should handle pagination" classname="workflows\transaction-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Transaction Workflow Tests › Transaction History › should view transaction details" classname="workflows\transaction-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Transaction Workflow Tests › Transaction Workflow Integration › should create sale and verify in history" classname="workflows\transaction-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Transaction Workflow Tests › Transaction Workflow Integration › should create stock addition and verify in history" classname="workflows\transaction-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Transaction Workflow Tests › Transaction Workflow Integration › should handle transaction workflow with different user roles" classname="workflows\transaction-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Transaction Workflow Tests › Transaction Error Handling › should handle network errors gracefully" classname="workflows\transaction-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Transaction Workflow Tests › Transaction Error Handling › should validate required fields" classname="workflows\transaction-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Transaction Workflow Tests › Transaction Error Handling › should handle invalid product searches" classname="workflows\transaction-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Transaction Workflow Tests › Transaction Accessibility › should be keyboard navigable" classname="workflows\transaction-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Transaction Workflow Tests › Transaction Accessibility › should have proper ARIA labels" classname="workflows\transaction-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Transaction Workflow Tests › Transaction Accessibility › should support screen readers" classname="workflows\transaction-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Transaction Workflow Tests › Transaction Performance › should load transaction builder quickly" classname="workflows\transaction-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Transaction Workflow Tests › Transaction Performance › should handle large transaction history efficiently" classname="workflows\transaction-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Transaction Workflow Tests › Transaction Performance › should handle rapid product additions efficiently" classname="workflows\transaction-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="workflows\user-management-workflow.spec.ts" timestamp="2025-07-22T18:57:34.672Z" hostname="Microsoft Edge" tests="46" failures="0" skipped="46" time="0" errors="0">
<testcase name="User Management Workflows › User Creation Workflow › should create a new user successfully" classname="workflows\user-management-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Management Workflows › User Creation Workflow › should validate required fields" classname="workflows\user-management-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Management Workflows › User Creation Workflow › should validate email format" classname="workflows\user-management-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Management Workflows › User Creation Workflow › should validate password requirements" classname="workflows\user-management-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Management Workflows › User Creation Workflow › should show role permissions when role is selected" classname="workflows\user-management-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Management Workflows › User Creation Workflow › should handle form cancellation" classname="workflows\user-management-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Management Workflows › User Creation Workflow › should disable form during submission" classname="workflows\user-management-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Management Workflows › User Listing and Filtering › should display users list" classname="workflows\user-management-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Management Workflows › User Listing and Filtering › should search users by name" classname="workflows\user-management-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Management Workflows › User Listing and Filtering › should search users by email" classname="workflows\user-management-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Management Workflows › User Listing and Filtering › should filter users by role" classname="workflows\user-management-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Management Workflows › User Listing and Filtering › should filter users by status" classname="workflows\user-management-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Management Workflows › User Listing and Filtering › should sort users by name" classname="workflows\user-management-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Management Workflows › User Listing and Filtering › should combine search and filters" classname="workflows\user-management-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Management Workflows › User Listing and Filtering › should handle empty search results" classname="workflows\user-management-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Management Workflows › User Listing and Filtering › should clear filters" classname="workflows\user-management-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Management Workflows › User Editing Workflow › should edit user details" classname="workflows\user-management-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Management Workflows › User Editing Workflow › should validate edit form" classname="workflows\user-management-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Management Workflows › User Editing Workflow › should cancel edit operation" classname="workflows\user-management-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Management Workflows › User Editing Workflow › should handle edit form loading state" classname="workflows\user-management-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Management Workflows › User Details and Viewing › should view user details" classname="workflows\user-management-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Management Workflows › User Details and Viewing › should close user details modal" classname="workflows\user-management-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Management Workflows › User Details and Viewing › should edit user from details modal" classname="workflows\user-management-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Management Workflows › User Details and Viewing › should display user avatar and status" classname="workflows\user-management-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Management Workflows › User Details and Viewing › should display contact and professional information" classname="workflows\user-management-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Management Workflows › User Deletion Workflow › should delete user successfully" classname="workflows\user-management-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Management Workflows › User Deletion Workflow › should confirm deletion before removing user" classname="workflows\user-management-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Management Workflows › User Deletion Workflow › should handle deletion errors gracefully" classname="workflows\user-management-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Management Workflows › Bulk User Operations › should select multiple users" classname="workflows\user-management-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Management Workflows › Bulk User Operations › should select all users" classname="workflows\user-management-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Management Workflows › Bulk User Operations › should perform bulk status update" classname="workflows\user-management-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Management Workflows › Bulk User Operations › should perform bulk role assignment" classname="workflows\user-management-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Management Workflows › Bulk User Operations › should perform bulk deletion" classname="workflows\user-management-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Management Workflows › Bulk User Operations › should handle bulk operation errors" classname="workflows\user-management-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Management Workflows › User Management Accessibility › should be keyboard navigable" classname="workflows\user-management-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Management Workflows › User Management Accessibility › should have proper ARIA labels" classname="workflows\user-management-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Management Workflows › User Management Accessibility › should support screen readers" classname="workflows\user-management-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Management Workflows › User Management Accessibility › should have sufficient color contrast" classname="workflows\user-management-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Management Workflows › User Management Performance › should load users list efficiently" classname="workflows\user-management-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Management Workflows › User Management Performance › should handle large user datasets" classname="workflows\user-management-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Management Workflows › User Management Performance › should implement efficient search" classname="workflows\user-management-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Management Workflows › User Management Performance › should implement pagination for large datasets" classname="workflows\user-management-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Management Workflows › User Management Error Handling › should handle API errors gracefully" classname="workflows\user-management-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Management Workflows › User Management Error Handling › should handle network disconnection" classname="workflows\user-management-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Management Workflows › User Management Error Handling › should retry failed requests" classname="workflows\user-management-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Management Workflows › User Management Error Handling › should handle validation errors from server" classname="workflows\user-management-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="workflows\auth-workflow.spec.ts" timestamp="2025-07-22T18:57:34.672Z" hostname="Google Chrome" tests="33" failures="0" skipped="33" time="0" errors="0">
<testcase name="Authentication Workflows › User Login Flow › should login successfully with valid admin credentials" classname="workflows\auth-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Workflows › User Login Flow › should login successfully with valid user credentials" classname="workflows\auth-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Workflows › User Login Flow › should show error with invalid credentials" classname="workflows\auth-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Workflows › User Login Flow › should show validation errors for empty fields" classname="workflows\auth-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Workflows › User Login Flow › should redirect to dashboard after successful login" classname="workflows\auth-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Workflows › User Login Flow › should persist session after page refresh" classname="workflows\auth-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Workflows › User Login Flow › should handle multiple failed login attempts" classname="workflows\auth-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Workflows › User Registration Flow › should register new user successfully" classname="workflows\auth-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Workflows › User Registration Flow › should show error for duplicate email" classname="workflows\auth-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Workflows › User Registration Flow › should validate password strength" classname="workflows\auth-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Workflows › User Registration Flow › should validate email format" classname="workflows\auth-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Workflows › User Registration Flow › should require password confirmation match" classname="workflows\auth-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Workflows › User Registration Flow › should navigate between login and signup pages" classname="workflows\auth-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Workflows › Admin Signup Flow › should register admin with valid admin code" classname="workflows\auth-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Workflows › Admin Signup Flow › should reject invalid admin code" classname="workflows\auth-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Workflows › Admin Signup Flow › should navigate to admin signup from login page" classname="workflows\auth-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Workflows › Password Reset Flow › should send reset email for valid email" classname="workflows\auth-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Workflows › Password Reset Flow › should show error for non-existent email" classname="workflows\auth-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Workflows › Password Reset Flow › should navigate to reset password from login page" classname="workflows\auth-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Workflows › Password Reset Flow › should navigate back to login from reset password" classname="workflows\auth-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Workflows › Session Management and Logout › should logout successfully" classname="workflows\auth-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Workflows › Session Management and Logout › should clear session data on logout" classname="workflows\auth-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Workflows › Session Management and Logout › should handle session expiration" classname="workflows\auth-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Workflows › Session Management and Logout › should maintain session across browser tabs" classname="workflows\auth-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Workflows › Authentication Security › should prevent SQL injection in login form" classname="workflows\auth-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Workflows › Authentication Security › should prevent XSS in login form" classname="workflows\auth-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Workflows › Authentication Security › should enforce HTTPS in production" classname="workflows\auth-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Workflows › Authentication Security › should have secure password requirements" classname="workflows\auth-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Workflows › Authentication Accessibility › should be keyboard navigable" classname="workflows\auth-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Workflows › Authentication Accessibility › should have proper ARIA labels" classname="workflows\auth-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Workflows › Authentication Accessibility › should announce form errors to screen readers" classname="workflows\auth-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Workflows › Authentication Performance › should load login page quickly" classname="workflows\auth-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Workflows › Authentication Performance › should handle login request efficiently" classname="workflows\auth-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="workflows\categories-workflow.spec.ts" timestamp="2025-07-22T18:57:34.672Z" hostname="Google Chrome" tests="33" failures="0" skipped="33" time="0" errors="0">
<testcase name="Categories Management Workflow › Categories List Page › should display categories list with proper elements" classname="workflows\categories-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Categories Management Workflow › Categories List Page › should load categories data successfully" classname="workflows\categories-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Categories Management Workflow › Categories List Page › should handle empty state when no categories exist" classname="workflows\categories-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Categories Management Workflow › Categories List Page › should handle loading state properly" classname="workflows\categories-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Categories Management Workflow › Categories List Page › should handle error state gracefully" classname="workflows\categories-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Categories Management Workflow › Categories Search and Filter › should search categories by name" classname="workflows\categories-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Categories Management Workflow › Categories Search and Filter › should search categories by description" classname="workflows\categories-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Categories Management Workflow › Categories Search and Filter › should clear search results" classname="workflows\categories-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Categories Management Workflow › Categories Search and Filter › should handle no search results" classname="workflows\categories-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Categories Management Workflow › Categories Sorting › should sort categories by name" classname="workflows\categories-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Categories Management Workflow › Categories Sorting › should sort categories by item count" classname="workflows\categories-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Categories Management Workflow › Categories Sorting › should sort categories by created date" classname="workflows\categories-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Categories Management Workflow › Categories Selection and Bulk Operations › should select individual categories" classname="workflows\categories-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Categories Management Workflow › Categories Selection and Bulk Operations › should select all categories" classname="workflows\categories-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Categories Management Workflow › Categories Selection and Bulk Operations › should deselect all categories" classname="workflows\categories-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Categories Management Workflow › Categories Selection and Bulk Operations › should show bulk actions panel when categories are selected" classname="workflows\categories-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Categories Management Workflow › Category Edit Workflow › should navigate to category edit page" classname="workflows\categories-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Categories Management Workflow › Category Edit Workflow › should load existing category data in edit form" classname="workflows\categories-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Categories Management Workflow › Category Edit Workflow › should update category successfully" classname="workflows\categories-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Categories Management Workflow › Category Edit Workflow › should validate required fields in edit form" classname="workflows\categories-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Categories Management Workflow › Category Edit Workflow › should cancel category edit" classname="workflows\categories-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Categories Management Workflow › Category Edit Workflow › should navigate back from edit page" classname="workflows\categories-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Categories Management Workflow › Category Delete Operations › should delete individual category" classname="workflows\categories-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Categories Management Workflow › Category Delete Operations › should handle delete confirmation dialog" classname="workflows\categories-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Categories Management Workflow › Accessibility and Performance › should meet accessibility standards" classname="workflows\categories-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Categories Management Workflow › Accessibility and Performance › should load categories page within performance budget" classname="workflows\categories-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Categories Management Workflow › Accessibility and Performance › should handle keyboard navigation" classname="workflows\categories-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Categories Management Workflow › Role-based Access Control › should allow admin full access to categories" classname="workflows\categories-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Categories Management Workflow › Role-based Access Control › should allow manager access to categories" classname="workflows\categories-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Categories Management Workflow › Role-based Access Control › should allow employee read access to categories" classname="workflows\categories-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Categories Management Workflow › Error Handling and Edge Cases › should handle network errors gracefully" classname="workflows\categories-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Categories Management Workflow › Error Handling and Edge Cases › should handle large datasets efficiently" classname="workflows\categories-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Categories Management Workflow › Error Handling and Edge Cases › should handle special characters in category names" classname="workflows\categories-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="workflows\dashboard-workflow.spec.ts" timestamp="2025-07-22T18:57:34.672Z" hostname="Google Chrome" tests="39" failures="0" skipped="39" time="0" errors="0">
<testcase name="Dashboard Workflows › Dashboard Loading and Metrics Display › should load dashboard with all components" classname="workflows\dashboard-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Dashboard Workflows › Dashboard Loading and Metrics Display › should display correct metrics values" classname="workflows\dashboard-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Dashboard Workflows › Dashboard Loading and Metrics Display › should refresh dashboard data" classname="workflows\dashboard-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Dashboard Workflows › Dashboard Loading and Metrics Display › should handle dashboard with no data gracefully" classname="workflows\dashboard-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Dashboard Workflows › Dashboard Loading and Metrics Display › should display loading states during data fetch" classname="workflows\dashboard-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Dashboard Workflows › Quick Actions Functionality › should navigate to inventory creation from quick action" classname="workflows\dashboard-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Dashboard Workflows › Quick Actions Functionality › should open quick stock modal" classname="workflows\dashboard-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Dashboard Workflows › Quick Actions Functionality › should navigate to create transaction" classname="workflows\dashboard-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Dashboard Workflows › Quick Actions Functionality › should navigate to reports" classname="workflows\dashboard-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Dashboard Workflows › Quick Actions Functionality › should show tooltips on quick action hover" classname="workflows\dashboard-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Dashboard Workflows › Low Stock Alerts Interaction › should display low stock alerts" classname="workflows\dashboard-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Dashboard Workflows › Low Stock Alerts Interaction › should navigate to item details from low stock alert" classname="workflows\dashboard-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Dashboard Workflows › Low Stock Alerts Interaction › should show alert severity levels" classname="workflows\dashboard-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Dashboard Workflows › Low Stock Alerts Interaction › should dismiss individual alerts" classname="workflows\dashboard-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Dashboard Workflows › Charts and Analytics Interaction › should display inventory chart with data" classname="workflows\dashboard-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Dashboard Workflows › Charts and Analytics Interaction › should interact with chart elements" classname="workflows\dashboard-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Dashboard Workflows › Charts and Analytics Interaction › should switch between chart types" classname="workflows\dashboard-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Dashboard Workflows › Charts and Analytics Interaction › should filter chart data by date range" classname="workflows\dashboard-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Dashboard Workflows › Charts and Analytics Interaction › should export chart data" classname="workflows\dashboard-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Dashboard Workflows › Recent Activities Navigation › should display recent activities" classname="workflows\dashboard-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Dashboard Workflows › Recent Activities Navigation › should navigate to activity details" classname="workflows\dashboard-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Dashboard Workflows › Recent Activities Navigation › should show activity timestamps" classname="workflows\dashboard-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Dashboard Workflows › Recent Activities Navigation › should group activities by type" classname="workflows\dashboard-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Dashboard Workflows › Recent Activities Navigation › should load more activities" classname="workflows\dashboard-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Dashboard Workflows › Dashboard Responsiveness › should adapt to mobile viewport" classname="workflows\dashboard-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Dashboard Workflows › Dashboard Responsiveness › should maintain functionality on tablet" classname="workflows\dashboard-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Dashboard Workflows › Dashboard Responsiveness › should handle orientation changes" classname="workflows\dashboard-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Dashboard Workflows › Dashboard Accessibility › should be keyboard navigable" classname="workflows\dashboard-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Dashboard Workflows › Dashboard Accessibility › should have proper accessibility attributes" classname="workflows\dashboard-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Dashboard Workflows › Dashboard Accessibility › should support screen readers" classname="workflows\dashboard-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Dashboard Workflows › Dashboard Accessibility › should have sufficient color contrast" classname="workflows\dashboard-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Dashboard Workflows › Dashboard Performance › should load within acceptable time limits" classname="workflows\dashboard-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Dashboard Workflows › Dashboard Performance › should handle slow network conditions" classname="workflows\dashboard-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Dashboard Workflows › Dashboard Performance › should efficiently handle large datasets" classname="workflows\dashboard-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Dashboard Workflows › Dashboard Performance › should optimize chart rendering" classname="workflows\dashboard-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Dashboard Workflows › Dashboard Performance › should cache dashboard data appropriately" classname="workflows\dashboard-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Dashboard Workflows › Dashboard Error Handling › should handle API errors gracefully" classname="workflows\dashboard-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Dashboard Workflows › Dashboard Error Handling › should retry failed requests" classname="workflows\dashboard-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Dashboard Workflows › Dashboard Error Handling › should handle network disconnection" classname="workflows\dashboard-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="workflows\inventory-workflow.spec.ts" timestamp="2025-07-22T18:57:34.672Z" hostname="Google Chrome" tests="35" failures="0" skipped="35" time="0" errors="0">
<testcase name="Inventory Management Workflows › Create New Inventory Item › should create new inventory item with all required fields" classname="workflows\inventory-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Inventory Management Workflows › Create New Inventory Item › should show validation errors for empty required fields" classname="workflows\inventory-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Inventory Management Workflows › Create New Inventory Item › should prevent duplicate SKU creation" classname="workflows\inventory-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Inventory Management Workflows › Create New Inventory Item › should validate numeric fields" classname="workflows\inventory-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Inventory Management Workflows › Create New Inventory Item › should upload and preview item image" classname="workflows\inventory-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Inventory Management Workflows › Create New Inventory Item › should auto-generate SKU if not provided" classname="workflows\inventory-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Inventory Management Workflows › Create New Inventory Item › should set default category and location if not selected" classname="workflows\inventory-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Inventory Management Workflows › Edit Existing Inventory Item › should edit inventory item successfully" classname="workflows\inventory-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Inventory Management Workflows › Edit Existing Inventory Item › should pre-fill form with existing data" classname="workflows\inventory-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Inventory Management Workflows › Edit Existing Inventory Item › should validate changes before saving" classname="workflows\inventory-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Inventory Management Workflows › Edit Existing Inventory Item › should track inventory changes in audit log" classname="workflows\inventory-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Inventory Management Workflows › Delete Inventory Item › should delete inventory item with confirmation" classname="workflows\inventory-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Inventory Management Workflows › Delete Inventory Item › should cancel deletion when user cancels" classname="workflows\inventory-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Inventory Management Workflows › Delete Inventory Item › should prevent deletion of items with active transactions" classname="workflows\inventory-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Inventory Management Workflows › Bulk Operations › should select multiple items for bulk operations" classname="workflows\inventory-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Inventory Management Workflows › Bulk Operations › should perform bulk price update" classname="workflows\inventory-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Inventory Management Workflows › Bulk Operations › should perform bulk category assignment" classname="workflows\inventory-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Inventory Management Workflows › Bulk Operations › should perform bulk deletion with confirmation" classname="workflows\inventory-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Inventory Management Workflows › Bulk Operations › should handle bulk operations on large datasets" classname="workflows\inventory-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Inventory Management Workflows › Quick Stock Operations › should perform quick stock adjustment" classname="workflows\inventory-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Inventory Management Workflows › Quick Stock Operations › should validate stock adjustment quantities" classname="workflows\inventory-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Inventory Management Workflows › Quick Stock Operations › should record stock adjustments in transaction history" classname="workflows\inventory-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Inventory Management Workflows › Search and Filter Inventory › should search inventory by name" classname="workflows\inventory-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Inventory Management Workflows › Search and Filter Inventory › should filter by category" classname="workflows\inventory-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Inventory Management Workflows › Search and Filter Inventory › should filter by location" classname="workflows\inventory-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Inventory Management Workflows › Search and Filter Inventory › should filter by stock level" classname="workflows\inventory-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Inventory Management Workflows › Search and Filter Inventory › should combine multiple filters" classname="workflows\inventory-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Inventory Management Workflows › Search and Filter Inventory › should clear all filters" classname="workflows\inventory-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Inventory Management Workflows › Search and Filter Inventory › should handle no search results gracefully" classname="workflows\inventory-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Inventory Management Workflows › Inventory Table Interactions › should sort inventory by different columns" classname="workflows\inventory-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Inventory Management Workflows › Inventory Table Interactions › should navigate through pagination" classname="workflows\inventory-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Inventory Management Workflows › Inventory Table Interactions › should display low stock warnings" classname="workflows\inventory-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Inventory Management Workflows › Inventory Table Interactions › should show item details on row click" classname="workflows\inventory-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Inventory Management Workflows › Inventory Performance › should load inventory page quickly" classname="workflows\inventory-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Inventory Management Workflows › Inventory Performance › should handle large inventory datasets efficiently" classname="workflows\inventory-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="workflows\locations-workflow.spec.ts" timestamp="2025-07-22T18:57:34.672Z" hostname="Google Chrome" tests="38" failures="0" skipped="38" time="0" errors="0">
<testcase name="Locations Management Workflow › Locations List Page › should display locations list with proper elements" classname="workflows\locations-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Locations Management Workflow › Locations List Page › should load locations data successfully" classname="workflows\locations-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Locations Management Workflow › Locations List Page › should handle empty state when no locations exist" classname="workflows\locations-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Locations Management Workflow › Locations List Page › should handle loading state properly" classname="workflows\locations-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Locations Management Workflow › Locations List Page › should handle error state gracefully" classname="workflows\locations-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Locations Management Workflow › Locations Search and Filter › should search locations by name" classname="workflows\locations-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Locations Management Workflow › Locations Search and Filter › should search locations by address" classname="workflows\locations-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Locations Management Workflow › Locations Search and Filter › should clear search results" classname="workflows\locations-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Locations Management Workflow › Locations Search and Filter › should handle no search results" classname="workflows\locations-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Locations Management Workflow › Locations Sorting › should sort locations by name" classname="workflows\locations-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Locations Management Workflow › Locations Sorting › should sort locations by item quantity" classname="workflows\locations-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Locations Management Workflow › Locations Selection and Bulk Operations › should select individual locations" classname="workflows\locations-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Locations Management Workflow › Locations Selection and Bulk Operations › should select all locations" classname="workflows\locations-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Locations Management Workflow › Locations Selection and Bulk Operations › should deselect all locations" classname="workflows\locations-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Locations Management Workflow › Locations Selection and Bulk Operations › should show bulk actions panel when locations are selected" classname="workflows\locations-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Locations Management Workflow › Location Create Workflow › should navigate to location create page" classname="workflows\locations-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Locations Management Workflow › Location Create Workflow › should create new location successfully" classname="workflows\locations-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Locations Management Workflow › Location Create Workflow › should validate required fields in create form" classname="workflows\locations-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Locations Management Workflow › Location Create Workflow › should cancel location creation" classname="workflows\locations-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Locations Management Workflow › Location Create Workflow › should navigate back from create page" classname="workflows\locations-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Locations Management Workflow › Location Edit Workflow › should navigate to location edit page" classname="workflows\locations-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Locations Management Workflow › Location Edit Workflow › should load existing location data in edit form" classname="workflows\locations-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Locations Management Workflow › Location Edit Workflow › should update location successfully" classname="workflows\locations-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Locations Management Workflow › Location Edit Workflow › should validate required fields in edit form" classname="workflows\locations-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Locations Management Workflow › Location Edit Workflow › should cancel location edit" classname="workflows\locations-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Locations Management Workflow › Location Edit Workflow › should navigate back from edit page" classname="workflows\locations-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Locations Management Workflow › Location Delete Operations › should delete individual location" classname="workflows\locations-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Locations Management Workflow › Location Delete Operations › should handle delete confirmation dialog" classname="workflows\locations-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Locations Management Workflow › Accessibility and Performance › should meet accessibility standards" classname="workflows\locations-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Locations Management Workflow › Accessibility and Performance › should load locations page within performance budget" classname="workflows\locations-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Locations Management Workflow › Accessibility and Performance › should handle keyboard navigation" classname="workflows\locations-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Locations Management Workflow › Role-based Access Control › should allow admin full access to locations" classname="workflows\locations-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Locations Management Workflow › Role-based Access Control › should allow manager access to locations" classname="workflows\locations-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Locations Management Workflow › Role-based Access Control › should allow employee read access to locations" classname="workflows\locations-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Locations Management Workflow › Error Handling and Edge Cases › should handle network errors gracefully" classname="workflows\locations-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Locations Management Workflow › Error Handling and Edge Cases › should handle large datasets efficiently" classname="workflows\locations-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Locations Management Workflow › Error Handling and Edge Cases › should handle special characters in location names" classname="workflows\locations-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Locations Management Workflow › Error Handling and Edge Cases › should handle duplicate location names" classname="workflows\locations-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="workflows\transaction-workflow.spec.ts" timestamp="2025-07-22T18:57:34.672Z" hostname="Google Chrome" tests="28" failures="0" skipped="28" time="0" errors="0">
<testcase name="Transaction Workflow Tests › Transaction Builder - Sales Transactions › should create a simple sale transaction" classname="workflows\transaction-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Transaction Workflow Tests › Transaction Builder - Sales Transactions › should create a multi-item sale transaction" classname="workflows\transaction-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Transaction Workflow Tests › Transaction Builder - Sales Transactions › should handle barcode scanning for sales" classname="workflows\transaction-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Transaction Workflow Tests › Transaction Builder - Sales Transactions › should allow removing line items" classname="workflows\transaction-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Transaction Workflow Tests › Transaction Builder - Sales Transactions › should validate minimum quantities" classname="workflows\transaction-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Transaction Workflow Tests › Transaction Builder - Sales Transactions › should handle transaction cancellation" classname="workflows\transaction-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Transaction Workflow Tests › Transaction Builder - Stock Addition Transactions › should create a stock addition transaction" classname="workflows\transaction-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Transaction Workflow Tests › Transaction Builder - Stock Addition Transactions › should handle large quantity stock additions" classname="workflows\transaction-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Transaction Workflow Tests › Transaction History › should display transaction history" classname="workflows\transaction-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Transaction Workflow Tests › Transaction History › should search transactions" classname="workflows\transaction-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Transaction Workflow Tests › Transaction History › should filter transactions by type" classname="workflows\transaction-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Transaction Workflow Tests › Transaction History › should filter transactions by status" classname="workflows\transaction-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Transaction Workflow Tests › Transaction History › should use advanced filters" classname="workflows\transaction-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Transaction Workflow Tests › Transaction History › should export transaction history" classname="workflows\transaction-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Transaction Workflow Tests › Transaction History › should handle pagination" classname="workflows\transaction-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Transaction Workflow Tests › Transaction History › should view transaction details" classname="workflows\transaction-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Transaction Workflow Tests › Transaction Workflow Integration › should create sale and verify in history" classname="workflows\transaction-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Transaction Workflow Tests › Transaction Workflow Integration › should create stock addition and verify in history" classname="workflows\transaction-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Transaction Workflow Tests › Transaction Workflow Integration › should handle transaction workflow with different user roles" classname="workflows\transaction-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Transaction Workflow Tests › Transaction Error Handling › should handle network errors gracefully" classname="workflows\transaction-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Transaction Workflow Tests › Transaction Error Handling › should validate required fields" classname="workflows\transaction-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Transaction Workflow Tests › Transaction Error Handling › should handle invalid product searches" classname="workflows\transaction-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Transaction Workflow Tests › Transaction Accessibility › should be keyboard navigable" classname="workflows\transaction-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Transaction Workflow Tests › Transaction Accessibility › should have proper ARIA labels" classname="workflows\transaction-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Transaction Workflow Tests › Transaction Accessibility › should support screen readers" classname="workflows\transaction-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Transaction Workflow Tests › Transaction Performance › should load transaction builder quickly" classname="workflows\transaction-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Transaction Workflow Tests › Transaction Performance › should handle large transaction history efficiently" classname="workflows\transaction-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Transaction Workflow Tests › Transaction Performance › should handle rapid product additions efficiently" classname="workflows\transaction-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="workflows\user-management-workflow.spec.ts" timestamp="2025-07-22T18:57:34.672Z" hostname="Google Chrome" tests="46" failures="0" skipped="46" time="0" errors="0">
<testcase name="User Management Workflows › User Creation Workflow › should create a new user successfully" classname="workflows\user-management-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Management Workflows › User Creation Workflow › should validate required fields" classname="workflows\user-management-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Management Workflows › User Creation Workflow › should validate email format" classname="workflows\user-management-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Management Workflows › User Creation Workflow › should validate password requirements" classname="workflows\user-management-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Management Workflows › User Creation Workflow › should show role permissions when role is selected" classname="workflows\user-management-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Management Workflows › User Creation Workflow › should handle form cancellation" classname="workflows\user-management-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Management Workflows › User Creation Workflow › should disable form during submission" classname="workflows\user-management-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Management Workflows › User Listing and Filtering › should display users list" classname="workflows\user-management-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Management Workflows › User Listing and Filtering › should search users by name" classname="workflows\user-management-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Management Workflows › User Listing and Filtering › should search users by email" classname="workflows\user-management-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Management Workflows › User Listing and Filtering › should filter users by role" classname="workflows\user-management-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Management Workflows › User Listing and Filtering › should filter users by status" classname="workflows\user-management-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Management Workflows › User Listing and Filtering › should sort users by name" classname="workflows\user-management-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Management Workflows › User Listing and Filtering › should combine search and filters" classname="workflows\user-management-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Management Workflows › User Listing and Filtering › should handle empty search results" classname="workflows\user-management-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Management Workflows › User Listing and Filtering › should clear filters" classname="workflows\user-management-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Management Workflows › User Editing Workflow › should edit user details" classname="workflows\user-management-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Management Workflows › User Editing Workflow › should validate edit form" classname="workflows\user-management-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Management Workflows › User Editing Workflow › should cancel edit operation" classname="workflows\user-management-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Management Workflows › User Editing Workflow › should handle edit form loading state" classname="workflows\user-management-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Management Workflows › User Details and Viewing › should view user details" classname="workflows\user-management-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Management Workflows › User Details and Viewing › should close user details modal" classname="workflows\user-management-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Management Workflows › User Details and Viewing › should edit user from details modal" classname="workflows\user-management-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Management Workflows › User Details and Viewing › should display user avatar and status" classname="workflows\user-management-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Management Workflows › User Details and Viewing › should display contact and professional information" classname="workflows\user-management-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Management Workflows › User Deletion Workflow › should delete user successfully" classname="workflows\user-management-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Management Workflows › User Deletion Workflow › should confirm deletion before removing user" classname="workflows\user-management-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Management Workflows › User Deletion Workflow › should handle deletion errors gracefully" classname="workflows\user-management-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Management Workflows › Bulk User Operations › should select multiple users" classname="workflows\user-management-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Management Workflows › Bulk User Operations › should select all users" classname="workflows\user-management-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Management Workflows › Bulk User Operations › should perform bulk status update" classname="workflows\user-management-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Management Workflows › Bulk User Operations › should perform bulk role assignment" classname="workflows\user-management-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Management Workflows › Bulk User Operations › should perform bulk deletion" classname="workflows\user-management-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Management Workflows › Bulk User Operations › should handle bulk operation errors" classname="workflows\user-management-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Management Workflows › User Management Accessibility › should be keyboard navigable" classname="workflows\user-management-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Management Workflows › User Management Accessibility › should have proper ARIA labels" classname="workflows\user-management-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Management Workflows › User Management Accessibility › should support screen readers" classname="workflows\user-management-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Management Workflows › User Management Accessibility › should have sufficient color contrast" classname="workflows\user-management-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Management Workflows › User Management Performance › should load users list efficiently" classname="workflows\user-management-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Management Workflows › User Management Performance › should handle large user datasets" classname="workflows\user-management-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Management Workflows › User Management Performance › should implement efficient search" classname="workflows\user-management-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Management Workflows › User Management Performance › should implement pagination for large datasets" classname="workflows\user-management-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Management Workflows › User Management Error Handling › should handle API errors gracefully" classname="workflows\user-management-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Management Workflows › User Management Error Handling › should handle network disconnection" classname="workflows\user-management-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Management Workflows › User Management Error Handling › should retry failed requests" classname="workflows\user-management-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Management Workflows › User Management Error Handling › should handle validation errors from server" classname="workflows\user-management-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
</testsuites>